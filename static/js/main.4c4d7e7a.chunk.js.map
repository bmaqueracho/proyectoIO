{"version":3,"sources":["CPMcalculator.jsx","PERTCalculator.jsx","optimizacion.jsx","EOQcalculator.jsx","EPQCalculator.jsx","MIFPCalculator.jsx","QuantityDiscountCalculator.jsx","ArbolesDecision.jsx","Incertidumbre.jsx","ColasPoissonExponencial.jsx","VariosServidoresPoissonExponencial.jsx","NacimientoMuerte.js","ColasPoissonArbitrario.js","MultiplesServidoresSinEspera.js","FuentesFinitas.js","QPCalculator.js","ProgramacionSeparable.js","ProgramacionNoConvexa.js","ProgramacionConvexa.js","ProgramacionFraccionaria.js","ProgramacionGeometrica.js","HolguraPorRechazos.js","OptimizacionSinRestricciones.js","App.js","reportWebVitals.js","index.js"],"names":["CPMCalculator","numActivities","setNumActivities","useState","activities","setActivities","results","setResults","handleInputChange","index","field","value","updatedActivities","computeCPM","durations","predecessors","length","earlyStart","Array","fill","earlyFinish","lateStart","Infinity","lateFinish","slack","adjList","from","inDegree","i","pred","parseInt","slice","push","queue","current","shift","neighbor","Math","max","min","criticalActivities","totalDuration","React","createElement","style","textAlign","padding","fontFamily","htmlFor","type","id","onChange","e","num","target","newActivities","_","duration","margin","borderCollapse","width","map","activity","key","placeholder","onClick","calculateCPM","split","p","trim","computedResults","marginTop","join","PertCalculator","computePERT","optimistic","mostLikely","pessimistic","expectedTimes","o","variances","criticalPath","calculateCriticalPath","totalVariance","reduce","a","b","projectStandardDeviation","sqrt","n","earliestStart","latestFinish","predIndices","replace","maxPredFinish","start","forEach","predIndex","isNaN","calculatePERT","optimisticTimes","parseFloat","mostLikelyTimes","pessimisticTimes","pertResults","Optimizacion","numVariables","setNumVariables","numRestricciones","setNumRestricciones","formularioGenerado","setFormularioGenerado","resultado","setResultado","onSubmit","event","preventDefault","coeficientesObjetivo","restricciones","j","restriccion","ladoIzquierdo","ladoDerecho","montoDerecho","simbolo","resolverOptimizacion","coefObjetivo","mejorValor","mejorSolucion","x","y","factible","valorIzq","valorDer","valorObjetivo","required","generarFormulario","formularioHTML","name","Fragment","className","JSON","stringify","CalculadoraEOQ","demanda","setDemanda","costoUnitario","setCostoUnitario","costoPedido","setCostoPedido","costoAlmacenamiento","setCostoAlmacenamiento","interes","setInteres","tiempoEspera","setTiempoEspera","usarInteres","setUsarInteres","diasAnio","setDiasAnio","eoq","setEoq","costoOrdenar","setCostoOrdenar","costoMantener","setCostoMantener","costoTotal","setCostoTotal","puntoReorden","setPuntoReorden","tiempoCiclo","setTiempoCiclo","disabled","checked","calcularEOQ","ch","alert","valorEOQ","round","costoOrdenarValue","costoMantenerValue","costoTotalValue","puntoReordenValue","tiempoCicloValue","EPQCalculator","demand","setDemand","productionRate","setProductionRate","productionCost","setProductionCost","orderingCost","setOrderingCost","workingDays","setWorkingDays","holdingCost","setHoldingCost","interestRate","setInterestRate","useInterest","setUseInterest","marginLeft","calculateEPQ","Ch","Q","T","t","holdingCostAnnual","preparationCostAnnual","totalCost","toFixed","MIFPCalculator","D","setD","C","setC","setCh","Co","setCo","Cf","setCf","diasHabiles","setDiasHabiles","S","calcularS","calcularT","t1","calcularT1","t2","calcularT2","Imax","calcularImax","Iprom","calcularIprom","N","calcularN","CT","calcularCT","Cinv","calcularCinv","Number","QuantityDiscountCalculator","discountLevels","setDiscountLevels","minQty","maxQty","price","optimalQuantity","setOptimalQuantity","minTotalCost","setMinTotalCost","handleDiscountChange","newDiscountLevels","level","addDiscountLevel","calculateOptimalOrder","every","minCost","optimalQ","resultDetails","I","P","QStar","calculateEOQ","calculateCost","EOQ","border","result","ArbolesDecision","nodos","setNodos","nombre","probabilidad","valor","hijos","nodoSeleccionado","setNodoSeleccionado","cantidadNodos","setCantidadNodos","metodoSeleccionado","setMetodoSeleccionado","decisionRecomendada","setDecisionRecomendada","buscarNodo","lista","nodo","encontrado","eliminarNodoPorId","filter","actualizarNodo","campo","nuevosNodos","calcularValorNodo","valorEsperado","hijo","valorHijo","valorPadre","renderNodos","nivel","arguments","undefined","paddingLeft","agregarNodos","numHijos","eliminarNodo","calcularValores","nodoPrincipal","mejorActividad","find","calcularDecisionRecomendada","Incertidumbre","matriz","setMatriz","filas","setFilas","columnas","setColumnas","criterio","setCriterio","alpha","setAlpha","fila","manejarCambio","nuevaMatriz","agregarFila","nuevaFila","agregarColumna","step","calcularResultado","calcularLaplace","sumas","acc","val","mejorAlternativa","indexOf","calcularOptimista","mejoresValores","calcularPesimista","peoresValores","calcularHurwicz","valoresHurwicz","maxVal","minVal","calcularSavage","maximosColumna","peoresOportunidades","ColasPoissonExponencial","lambda","setLambda","mu","setMu","setN","display","marginBottom","calcularColas","lambdaNum","muNum","nNum","Lq","pow","L","Po","Wq","W","Pw","Pn","servidores","setServidores","calcularFactorial","calcularResultados","servidoresNum","rho","sumaParte1","Ws","NacimientoMuerte","Error","Ls","ModeloLineaEsperaMG1","varianza","setVarianza","sigma2","P0","MultiplesServidoresSinEspera","sumatoria","Prej","FuentesFinitas","Nnum","lambdaEfectiva","ProgramacionCuadratica","coefLineales","coefCuadraticos","coefInteracciones","x1","x2","valores","valorRestriccion","coeficientes","coef","limite","_event$target","ProgramacionSeparable","setCoeficientes","setRestricciones","actualizarCoeficiente","nuevosCoeficientes","actualizarRestriccion","nuevasRestricciones","v","variable","cuadratico","lineal","tipo","_ref4","nuevosCoef","resolver","soluciones","_ref","xOpt","_ref2","_ref3","abs","resultadoTotal","s","error","console","_ref5","ProgramacionNoConvexa","subIndex","cubico","agregarRestriccion","sum","sol","ProgramacionConvexa","setCoeficientesObjetivo","actualizarObjetivo","coefIndex","proyectarRestricciones","variables","vars","factor","norma","vector","inicializarFormulario","solucion","variablesIniciales","iteraciones","tasaAprendizaje","iter","gradiente","nuevasVariables","gradienteProyectado","objetivo","ProgramacionFraccionaria","coeficientesNumerador","setCoeficientesNumerador","coeficientesDenominador","setCoeficientesDenominador","nuevosNumerador","nuevosDenominador","valorNumerador","valorDenominador","ProgramacionGeometricaOptimizada","expIndex","c","exponentes","calcularObjetivo","prod","xi","restriccionesValidas","exp","gradientes","variablesDelta","f1","gradienteDescendente","HolguraPorRechazos","maxLotSize","maxRuns","successProb","fixedCost","variableCost","failureCost","epsilon","generateTransitionProb","states","actions","transitionProb","pSuccess","pFailure","calculateProbabilities","lotSize","readOnly","handleCalculate","cost","generateCost","policy","expectedCosts","iterations","valueIteration","gamma","V","calculateBestAction","bestAction","expectedCost","nextS","delta","iterationV","iterationPolicy","Object","entries","state","action","OptimizacionSinRestricciones","method","setMethod","setResult","bisectionInputs","setBisectionInputs","func","tolerance","newtonInputs","setNewtonInputs","x0","handleBisectionChange","handleNewtonChange","f","math","bisection","df","evaluate","message","newton","firstDerivative","secondDerivative","xNew","App","selectedUnit","setSelectedUnit","selectedMethod","setSelectedMethod","handleSelectUnit","unit","handleSelectMethod","goBack","CpmCalculator","EOQCalculator","VariosServidorPoissonExponencial","ColasPoissonArbitrario","QPCalculator","ProgramacionGeometrica","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4c4d7e7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Si deseas agregar estilos\r\n\r\nconst CPMCalculator = () => {\r\n  const [numActivities, setNumActivities] = useState(0);\r\n  const [activities, setActivities] = useState([]);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const createTable = (e) => {\r\n    const num = e.target.value;\r\n    setNumActivities(num);\r\n\r\n    const newActivities = Array.from({ length: num }, (_, i) => ({\r\n      id: `A${i + 1}`,\r\n      duration: '',\r\n      predecessors: '',\r\n    }));\r\n    setActivities(newActivities);\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedActivities = [...activities];\r\n    updatedActivities[index][field] = value;\r\n    setActivities(updatedActivities);\r\n  };\r\n\r\n  const calculateCPM = () => {\r\n    const durations = activities.map((activity) => parseInt(activity.duration) || 0);\r\n    const predecessors = activities.map((activity) =>\r\n      activity.predecessors.split(',').map((p) => p.trim())\r\n    );\r\n\r\n    const computedResults = computeCPM(durations, predecessors);\r\n    setResults(computedResults);\r\n  };\r\n\r\n  const computeCPM = (durations, predecessors) => {\r\n    const numActivities = durations.length;\r\n    const earlyStart = Array(numActivities).fill(0);\r\n    const earlyFinish = Array(numActivities).fill(0);\r\n    const lateStart = Array(numActivities).fill(Infinity);\r\n    const lateFinish = Array(numActivities).fill(Infinity);\r\n    const slack = Array(numActivities).fill(0);\r\n    const adjList = Array.from({ length: numActivities }, () => []);\r\n    const inDegree = Array(numActivities).fill(0);\r\n\r\n    for (let i = 0; i < numActivities; i++) {\r\n      for (const pred of predecessors[i]) {\r\n        if (pred) {\r\n          const predIndex = parseInt(pred.slice(1)) - 1;\r\n          adjList[predIndex].push(i);\r\n          inDegree[i]++;\r\n        }\r\n      }\r\n    }\r\n\r\n    const queue = [];\r\n    for (let i = 0; i < numActivities; i++) {\r\n      if (inDegree[i] === 0) {\r\n        queue.push(i);\r\n        earlyFinish[i] = durations[i];\r\n      }\r\n    }\r\n\r\n    while (queue.length > 0) {\r\n      const current = queue.shift();\r\n      for (const neighbor of adjList[current]) {\r\n        earlyStart[neighbor] = Math.max(earlyStart[neighbor], earlyFinish[current]);\r\n        earlyFinish[neighbor] = earlyStart[neighbor] + durations[neighbor];\r\n\r\n        inDegree[neighbor]--;\r\n        if (inDegree[neighbor] === 0) {\r\n          queue.push(neighbor);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < numActivities; i++) {\r\n      lateFinish[i] = earlyFinish[numActivities - 1];\r\n    }\r\n\r\n    for (let i = numActivities - 1; i >= 0; i--) {\r\n      for (const neighbor of adjList[i]) {\r\n        lateFinish[i] = Math.min(lateFinish[i], lateStart[neighbor]);\r\n      }\r\n      lateStart[i] = lateFinish[i] - durations[i];\r\n    }\r\n\r\n    const criticalActivities = [];\r\n    for (let i = 0; i < numActivities; i++) {\r\n      slack[i] = lateStart[i] - earlyStart[i];\r\n      if (slack[i] === 0) {\r\n        criticalActivities.push(`A${i + 1}`);\r\n      }\r\n    }\r\n\r\n    const totalDuration = earlyFinish[numActivities - 1];\r\n\r\n    return { totalDuration, earlyStart, earlyFinish, lateStart, lateFinish, slack, criticalActivities };\r\n  };\r\n\r\n  const displayResults = () => {\r\n    if (!results) return null;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Resultados</h3>\r\n        <p>Duración Total del Proyecto: {results.totalDuration}</p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Actividad</th>\r\n              <th>Early Start</th>\r\n              <th>Early Finish</th>\r\n              <th>Late Start</th>\r\n              <th>Late Finish</th>\r\n              <th>Slack</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {activities.map((activity, index) => (\r\n              <tr key={activity.id}>\r\n                <td>{activity.id}</td>\r\n                <td>{results.earlyStart[index]}</td>\r\n                <td>{results.earlyFinish[index]}</td>\r\n                <td>{results.lateStart[index]}</td>\r\n                <td>{results.lateFinish[index]}</td>\r\n                <td>{results.slack[index]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <p>Actividades Críticas: {results.criticalActivities.join(', ') || 'Ninguna'}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '50px', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>CPM - Programación de Proyectos</h1>\r\n      <label htmlFor=\"numActivities\">Número de Actividades:</label>\r\n      <input type=\"number\" id=\"numActivities\" min=\"1\" onChange={createTable} /><br /><br />\r\n\r\n      {numActivities > 0 && (\r\n        <table style={{ margin: '20px auto', borderCollapse: 'collapse', width: '80%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Actividad</th>\r\n              <th>Duración</th>\r\n              <th>Predecesores</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {activities.map((activity, index) => (\r\n              <tr key={index}>\r\n                <td>{activity.id}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={activity.duration}\r\n                    onChange={(e) => handleInputChange(index, 'duration', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Ej: A1,A2\"\r\n                    value={activity.predecessors}\r\n                    onChange={(e) => handleInputChange(index, 'predecessors', e.target.value)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      <button onClick={calculateCPM}>Calcular Duración del Proyecto</button>\r\n\r\n      {results && (\r\n        <div id=\"results\" style={{ marginTop: '20px' }}>\r\n          {displayResults()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CPMCalculator;\r\n","import React, { useState } from 'react';\r\n\r\nfunction PertCalculator() {\r\n  const [numActivities, setNumActivities] = useState(0);\r\n  const [activities, setActivities] = useState([]);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const handleNumActivitiesChange = (e) => {\r\n    const value = parseInt(e.target.value, 10);\r\n    if (isNaN(value) || value <= 0) {\r\n      setNumActivities(0);\r\n      setActivities([]);\r\n      return;\r\n    }\r\n    setNumActivities(value);\r\n    setActivities(Array.from({ length: value }, () => ({ optimistic: '', mostLikely: '', pessimistic: '', predecessors: '' })));\r\n  };\r\n\r\n  const handleInputChange = (index, field, value) => {\r\n    const updatedActivities = [...activities];\r\n    updatedActivities[index] = { ...updatedActivities[index], [field]: value };\r\n    setActivities(updatedActivities);\r\n  };\r\n\r\n  const calculatePERT = () => {\r\n    const optimisticTimes = activities.map(activity => parseFloat(activity.optimistic) || 0);\r\n    const mostLikelyTimes = activities.map(activity => parseFloat(activity.mostLikely) || 0);\r\n    const pessimisticTimes = activities.map(activity => parseFloat(activity.pessimistic) || 0);\r\n    const predecessors = activities.map(activity => activity.predecessors ? activity.predecessors.split(',').map(p => p.trim()) : []);\r\n\r\n    const pertResults = computePERT(optimisticTimes, mostLikelyTimes, pessimisticTimes, predecessors);\r\n    setResults(pertResults);\r\n  };\r\n\r\n  const computePERT = (optimistic, mostLikely, pessimistic, predecessors) => {\r\n    const expectedTimes = optimistic.map((o, i) => (o + 4 * mostLikely[i] + pessimistic[i]) / 6);\r\n    const variances = optimistic.map((o, i) => ((pessimistic[i] - o) / 6) ** 2);\r\n\r\n    const { totalDuration, criticalPath } = calculateCriticalPath(expectedTimes, predecessors);\r\n    const totalVariance = variances.reduce((a, b) => a + b, 0);\r\n    const projectStandardDeviation = Math.sqrt(totalVariance);\r\n\r\n    return {\r\n      totalDuration,\r\n      totalVariance,\r\n      projectStandardDeviation,\r\n      criticalPath,\r\n    };\r\n  };\r\n\r\n  const calculateCriticalPath = (expectedTimes, predecessors) => {\r\n    const n = expectedTimes.length;\r\n    const earliestStart = Array(n).fill(0);\r\n    const latestFinish = Array(n).fill(Infinity);\r\n\r\n    // Paso 1: Calcular el tiempo de inicio más temprano (forward pass)\r\n    for (let i = 0; i < n; i++) {\r\n      if (predecessors[i].length > 0) {\r\n        const predIndices = predecessors[i].map(p => parseInt(p.replace('A', '')) - 1);\r\n        const maxPredFinish = Math.max(...predIndices.map(p => earliestStart[p] + expectedTimes[p]));\r\n        earliestStart[i] = maxPredFinish;\r\n      }\r\n    }\r\n\r\n    const totalDuration = Math.max(...earliestStart.map((start, i) => start + expectedTimes[i]));\r\n\r\n    // Paso 2: Calcular el tiempo de finalización más tarde (backward pass)\r\n    latestFinish.fill(totalDuration); // Todas las actividades finales deben terminar en la duración total\r\n\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      if (predecessors[i].length > 0) {\r\n        const predIndices = predecessors[i].map(p => parseInt(p.replace('A', '')) - 1);\r\n        predIndices.forEach(predIndex => {\r\n          latestFinish[predIndex] = Math.min(latestFinish[predIndex], earliestStart[i]);\r\n        });\r\n      }\r\n    }\r\n\r\n    // Paso 3: Determinar las actividades críticas (las que tienen holgura cero)\r\n    const criticalPath = [];\r\n    for (let i = 0; i < n; i++) {\r\n      const finishTime = earliestStart[i] + expectedTimes[i];\r\n      if (finishTime === latestFinish[i]) {\r\n        criticalPath.push(`A${i + 1}`);\r\n      }\r\n    }\r\n\r\n    return { totalDuration, criticalPath };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PERT - Programación de Proyectos</h1>\r\n      <label htmlFor=\"numActivities\">Número de Actividades:</label>\r\n      <input\r\n        type=\"number\"\r\n        id=\"numActivities\"\r\n        min=\"1\"\r\n        value={numActivities}\r\n        onChange={handleNumActivitiesChange}\r\n      />\r\n      <br /><br />\r\n\r\n      {activities.map((activity, index) => (\r\n        <div key={index}>\r\n          <h3>Actividad {index + 1}</h3>\r\n          <label>Tiempo Optimista:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={activity.optimistic}\r\n            onChange={(e) => handleInputChange(index, 'optimistic', e.target.value)}\r\n          />\r\n          <label>Tiempo Más Probable:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={activity.mostLikely}\r\n            onChange={(e) => handleInputChange(index, 'mostLikely', e.target.value)}\r\n          />\r\n          <label>Tiempo Pesimista:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={activity.pessimistic}\r\n            onChange={(e) => handleInputChange(index, 'pessimistic', e.target.value)}\r\n          />\r\n          <label>Predecesores:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={activity.predecessors}\r\n            onChange={(e) => handleInputChange(index, 'predecessors', e.target.value)}\r\n            placeholder=\"Ej: A1,A2\"\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n      <button onClick={calculatePERT}>Calcular Duración del Proyecto</button>\r\n\r\n      {results && (\r\n        <div id=\"results\">\r\n          <h3>Resultados</h3>\r\n          <p>Duración Total del Proyecto: {results.totalDuration}</p>\r\n          <p>Varianza Total del Proyecto: {results.totalVariance}</p>\r\n          <p>Desviación Estándar del Proyecto: {results.projectStandardDeviation}</p>\r\n          <p>Ruta Crítica: {results.criticalPath.join(', ')}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PertCalculator;\r\n","import React, { useState } from 'react';\r\n\r\nconst Optimizacion = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [numRestricciones, setNumRestricciones] = useState(2);\r\n  const [formularioGenerado, setFormularioGenerado] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const generarFormulario = () => {\r\n    let formularioHTML = [];\r\n\r\n    // Función objetivo\r\n    formularioHTML.push(\r\n      <div key=\"objetivo\">\r\n        <h2>Función Objetivo</h2>\r\n        {[...Array(numVariables)].map((_, i) => (\r\n          <input\r\n            key={`coefVar${i + 1}`}\r\n            type=\"number\"\r\n            placeholder={`Coeficiente de la variable ${i + 1}`}\r\n            name={`coefVar${i + 1}`}\r\n            required\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    // Restricciones\r\n    formularioHTML.push(\r\n      <div key=\"restricciones\">\r\n        <h2>Restricciones</h2>\r\n        {[...Array(numRestricciones)].map((_, j) => (\r\n          <div key={`restriccion${j + 1}`}>\r\n            <h3>Restricción {j + 1}</h3>\r\n            <h4>Lado Izquierdo (Variables):</h4>\r\n            {[...Array(numVariables)].map((_, i) => (\r\n              <input\r\n                key={`coefRestIzq${j + 1}Var${i + 1}`}\r\n                type=\"number\"\r\n                placeholder={`Coef Variable ${i + 1} (si aplica)`}\r\n                name={`coefRestIzq${j + 1}Var${i + 1}`}\r\n                required\r\n              />\r\n            ))}\r\n            <select name={`simboloRest${j + 1}`} key={`simboloRest${j + 1}`}>\r\n              <option value=\"<=\">&le;</option>\r\n              <option value=\">=\">&ge;</option>\r\n              <option value=\"<\">&lt;</option>\r\n              <option value=\">\">&gt;</option>\r\n              <option value=\"=\">=</option>\r\n            </select>\r\n            <h4>Lado Derecho (Variables + Monto Fijo):</h4>\r\n            {[...Array(numVariables)].map((_, i) => (\r\n              <input\r\n                key={`coefRestDer${j + 1}Var${i + 1}`}\r\n                type=\"number\"\r\n                placeholder={`Coef Variable ${i + 1} (si aplica)`}\r\n                name={`coefRestDer${j + 1}Var${i + 1}`}\r\n                required\r\n              />\r\n            ))}\r\n            <input\r\n              key={`montoRestDer${j + 1}`}\r\n              type=\"number\"\r\n              placeholder=\"Monto fijo\"\r\n              name={`montoRestDer${j + 1}`}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    setFormularioGenerado(formularioHTML);\r\n  };\r\n\r\n  const resolverOptimizacion = (coefObjetivo, restricciones) => {\r\n    let mejorValor = -Infinity;\r\n    let mejorSolucion = {};\r\n\r\n    for (let x = 0; x <= 100; x++) {\r\n      for (let y = 0; y <= 100; y++) {\r\n        let factible = true;\r\n\r\n        for (let restriccion of restricciones) {\r\n          let valorIzq =\r\n            restriccion.ladoIzquierdo[0] * x +\r\n            restriccion.ladoIzquierdo[1] * y;\r\n          let valorDer =\r\n            restriccion.ladoDerecho[0] * x +\r\n            restriccion.ladoDerecho[1] * y +\r\n            restriccion.montoDerecho;\r\n\r\n          switch (restriccion.simbolo) {\r\n            case '<=':\r\n              if (valorIzq > valorDer) factible = false;\r\n              break;\r\n            case '>=':\r\n              if (valorIzq < valorDer) factible = false;\r\n              break;\r\n            case '=':\r\n              if (valorIzq !== valorDer) factible = false;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          if (!factible) break;\r\n        }\r\n\r\n        if (factible) {\r\n          let valorObjetivo = coefObjetivo[0] * x + coefObjetivo[1] * y;\r\n          if (valorObjetivo > mejorValor) {\r\n            mejorValor = valorObjetivo;\r\n            mejorSolucion = { x, y };\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return { mejorValor, mejorSolucion };\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const coeficientesObjetivo = [];\r\n    const restricciones = [];\r\n\r\n    // Obtener coeficientes de la función objetivo\r\n    for (let i = 1; i <= numVariables; i++) {\r\n      coeficientesObjetivo.push(\r\n        parseFloat(event.target[`coefVar${i}`].value)\r\n      );\r\n    }\r\n\r\n    // Obtener restricciones\r\n    for (let j = 1; j <= numRestricciones; j++) {\r\n      let restriccion = {\r\n        ladoIzquierdo: [],\r\n        ladoDerecho: [],\r\n        montoDerecho: parseFloat(\r\n          event.target[`montoRestDer${j}`].value\r\n        ),\r\n        simbolo: event.target[`simboloRest${j}`].value,\r\n      };\r\n\r\n      // Lado izquierdo\r\n      for (let i = 1; i <= numVariables; i++) {\r\n        restriccion.ladoIzquierdo.push(\r\n          parseFloat(event.target[`coefRestIzq${j}Var${i}`].value)\r\n        );\r\n      }\r\n\r\n      // Lado derecho\r\n      for (let i = 1; i <= numVariables; i++) {\r\n        restriccion.ladoDerecho.push(\r\n          parseFloat(event.target[`coefRestDer${j}Var${i}`].value)\r\n        );\r\n      }\r\n\r\n      restricciones.push(restriccion);\r\n    }\r\n\r\n    const resultado = resolverOptimizacion(coeficientesObjetivo, restricciones);\r\n    setResultado(resultado);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h1>Modelo de Optimización</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Selecciona Cantidad de Variables y Restricciones</h2>\r\n\r\n        <label>\r\n          Cantidad de Variables:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={numVariables}\r\n            onChange={(e) => setNumVariables(parseInt(e.target.value))}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Cantidad de Restricciones:\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={numRestricciones}\r\n            onChange={(e) => setNumRestricciones(parseInt(e.target.value))}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"button\" onClick={generarFormulario}>\r\n          Generar Formulario\r\n        </button>\r\n\r\n        {formularioGenerado.length > 0 && (\r\n          <>\r\n            {formularioGenerado}\r\n            <button type=\"submit\">Calcular</button>\r\n          </>\r\n        )}\r\n      </form>\r\n\r\n      {resultado && (\r\n        <div className=\"result\">\r\n          <h2>Resultado</h2>\r\n          <p>\r\n            Mejor beneficio: {resultado.mejorValor}\r\n            <br />\r\n            Valores óptimos: {JSON.stringify(resultado.mejorSolucion)}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Optimizacion;\r\n","import React, { useState } from 'react';\r\n\r\nfunction CalculadoraEOQ() {\r\n  const [demanda, setDemanda] = useState('');\r\n  const [costoUnitario, setCostoUnitario] = useState('');\r\n  const [costoPedido, setCostoPedido] = useState('');\r\n  const [costoAlmacenamiento, setCostoAlmacenamiento] = useState('');\r\n  const [interes, setInteres] = useState('');\r\n  const [tiempoEspera, setTiempoEspera] = useState('');\r\n  const [usarInteres, setUsarInteres] = useState(false); \r\n  const [diasAnio, setDiasAnio] = useState(365); // Para elegir entre 365 o 250 días\r\n  const [eoq, setEoq] = useState(null);\r\n  const [costoOrdenar, setCostoOrdenar] = useState(null);\r\n  const [costoMantener, setCostoMantener] = useState(null);\r\n  const [costoTotal, setCostoTotal] = useState(null);\r\n  const [puntoReorden, setPuntoReorden] = useState(null);\r\n  const [tiempoCiclo, setTiempoCiclo] = useState(null); // Estado para el tiempo de ciclo\r\n\r\n  const calcularEOQ = () => {\r\n    let ch;\r\n\r\n    if (usarInteres && interes && costoUnitario) {\r\n      ch = (interes / 100) * costoUnitario;\r\n    } else if (costoAlmacenamiento) {\r\n      ch = parseFloat(costoAlmacenamiento);\r\n    } else {\r\n      alert('Por favor, ingrese todos los valores.');\r\n      return;\r\n    }\r\n\r\n    if (demanda && costoPedido && ch) {\r\n      const valorEOQ = Math.sqrt((2 * demanda * costoPedido) / ch);\r\n      setEoq(Math.round(valorEOQ));\r\n\r\n      const costoOrdenarValue = (demanda / valorEOQ) * costoPedido;\r\n      setCostoOrdenar(Math.round(costoOrdenarValue));\r\n\r\n      const costoMantenerValue = (valorEOQ / 2) * ch;\r\n      setCostoMantener(Math.round(costoMantenerValue));\r\n\r\n      const costoTotalValue = costoOrdenarValue + costoMantenerValue;\r\n      setCostoTotal(Math.round(costoTotalValue));\r\n\r\n      if (tiempoEspera) {\r\n        const demandaDiaria = demanda / diasAnio;\r\n        const puntoReordenValue = demandaDiaria * tiempoEspera;\r\n        setPuntoReorden(Math.round(puntoReordenValue));\r\n      } else {\r\n        alert('Por favor, ingrese el tiempo de espera en días.');\r\n      }\r\n\r\n      // Cálculo del número de órdenes y el tiempo de ciclo\r\n      const numeroOrdenes = demanda / valorEOQ; // D/Q\r\n      const tiempoCicloValue = diasAnio / numeroOrdenes; // (365 o 250) / número de órdenes\r\n      setTiempoCiclo(Math.round(tiempoCicloValue)); // Redondear tiempo de ciclo\r\n    } else {\r\n      alert('Por favor, ingrese todos los valores.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h2>Modelo EOQ (Cantidad Económica de Pedido)</h2>\r\n\r\n      <div>\r\n        <label>\r\n          Demanda Anual (D): \r\n          <input\r\n            type=\"number\"\r\n            value={demanda}\r\n            onChange={(e) => setDemanda(e.target.value)}\r\n            placeholder=\"Ingrese la demanda anual\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Costo Unitario (C): \r\n          <input\r\n            type=\"number\"\r\n            value={costoUnitario}\r\n            onChange={(e) => setCostoUnitario(e.target.value)}\r\n            placeholder=\"Ingrese el costo unitario\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Costo por Pedido (Co): \r\n          <input\r\n            type=\"number\"\r\n            value={costoPedido}\r\n            onChange={(e) => setCostoPedido(e.target.value)}\r\n            placeholder=\"Ingrese el costo por pedido\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Costo de Almacenamiento (Ch) o Interés (%): \r\n          <input\r\n            type=\"number\"\r\n            value={costoAlmacenamiento}\r\n            onChange={(e) => setCostoAlmacenamiento(e.target.value)}\r\n            placeholder=\"Ingrese el costo de almacenamiento\"\r\n            style={{ margin: '10px' }}\r\n            disabled={usarInteres}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Usar Interés (%):\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={usarInteres}\r\n            onChange={() => setUsarInteres(!usarInteres)}\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n        {usarInteres && (\r\n          <div>\r\n            <label>\r\n              Interés (I): \r\n              <input\r\n                type=\"number\"\r\n                value={interes}\r\n                onChange={(e) => setInteres(e.target.value)}\r\n                placeholder=\"Ingrese el interés en porcentaje\"\r\n                style={{ margin: '10px' }}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Tiempo de Espera (m) en días: \r\n          <input\r\n            type=\"number\"\r\n            value={tiempoEspera}\r\n            onChange={(e) => setTiempoEspera(e.target.value)}\r\n            placeholder=\"Ingrese el tiempo de espera\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>\r\n          Número de días (365 o 250): \r\n          <input\r\n            type=\"number\"\r\n            value={diasAnio}\r\n            onChange={(e) => setDiasAnio(e.target.value)}\r\n            placeholder=\"Ingrese 365 o 250 días\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <button onClick={calcularEOQ} style={{ margin: '10px' }}>Calcular EOQ</button>\r\n\r\n      {eoq && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Resultado EOQ: {eoq} unidades</h3>\r\n          <h3>Costo Anual por Ordenar: {costoOrdenar} unidades monetarias</h3>\r\n          <h3>Costo Anual por Mantener: {costoMantener} unidades monetarias</h3>\r\n          <h3>Costo Total Anual: {costoTotal} unidades monetarias</h3>\r\n          {puntoReorden && (\r\n            <h3>Punto de Reorden: {puntoReorden} unidades</h3>\r\n          )}\r\n          {tiempoCiclo && (\r\n            <h3>Tiempo de Ciclo: {tiempoCiclo} días</h3>\r\n          )}\r\n\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalculadoraEOQ;\r\n","import React, { useState } from 'react';\r\n\r\nfunction EPQCalculator() {\r\n  const [demand, setDemand] = useState('');          // D: Demanda anual\r\n  const [productionRate, setProductionRate] = useState('');  // P: Producción anual\r\n  const [productionCost, setProductionCost] = useState('');  // C: Costo de producción\r\n  const [orderingCost, setOrderingCost] = useState('');      // Co: Costo de preparación/pedido\r\n  const [workingDays, setWorkingDays] = useState('');        // DH: Días hábiles\r\n  const [holdingCost, setHoldingCost] = useState('');        // Ch: Costo de retención\r\n  const [interestRate, setInterestRate] = useState('');      // I: Interés en porcentaje\r\n\r\n  const [useInterest, setUseInterest] = useState(false);     // Opción entre usar Ch o I\r\n\r\n  const [results, setResults] = useState(null);\r\n\r\n  const calculateEPQ = () => {\r\n    if (demand && productionRate && productionCost && orderingCost && workingDays) {\r\n      // Validar si se ha ingresado el costo de retención (Ch) o el interés (I)\r\n      let Ch = holdingCost;\r\n      if (useInterest) {\r\n        if (!interestRate) {\r\n          alert('Debe ingresar el interés cuando se selecciona usar el interés.');\r\n          return;\r\n        }\r\n        Ch = (interestRate / 100) * productionCost;  // Calcular Ch usando el interés (I)\r\n      }\r\n\r\n      if (!Ch) {\r\n        alert('Debe ingresar el costo de retención (Ch) o seleccionar usar el interés.');\r\n        return;\r\n      }\r\n\r\n      if (productionRate <= demand) {\r\n        alert('La tasa de producción (P) debe ser mayor que la demanda (D).');\r\n        return;\r\n      }\r\n\r\n      // Fórmula para EPQ (Q*)\r\n      const Q = Math.sqrt((2 * demand * orderingCost) / (Ch * (1 - demand / productionRate)));\r\n\r\n      // Cálculo del tiempo de ciclo (T)\r\n      const T = workingDays / (demand / Q);\r\n\r\n      // Producción diaria (p)\r\n      const p = productionRate / workingDays;\r\n\r\n      // Tiempo de duración de la fase de producción (t)\r\n      const t = Q / p;\r\n\r\n      // Costo anual de retención\r\n      const holdingCostAnnual = 0.5 * (1 - demand / productionRate) * Q * Ch;\r\n\r\n      // Costo anual de preparación\r\n      const preparationCostAnnual = (demand / Q) * orderingCost;\r\n\r\n      // Costo total anual (TC)\r\n      const totalCost = preparationCostAnnual + holdingCostAnnual;\r\n\r\n      setResults({\r\n        Q: Q.toFixed(2),\r\n        T: T.toFixed(2),\r\n        p: p.toFixed(2),\r\n        t: t.toFixed(2),\r\n        holdingCostAnnual: holdingCostAnnual.toFixed(2),\r\n        preparationCostAnnual: preparationCostAnnual.toFixed(2),\r\n        totalCost: totalCost.toFixed(2),\r\n      });\r\n    } else {\r\n      alert('Por favor, ingrese todos los valores requeridos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h2>Modelo de Lote de Producción (EPQ)</h2>\r\n      <div>\r\n        <label>\r\n          Demanda Anual (D): \r\n          <input\r\n            type=\"number\"\r\n            value={demand}\r\n            onChange={(e) => setDemand(e.target.value)}\r\n            placeholder=\"Ingrese la demanda anual\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Producción Anual (P): \r\n          <input\r\n            type=\"number\"\r\n            value={productionRate}\r\n            onChange={(e) => setProductionRate(e.target.value)}\r\n            placeholder=\"Ingrese la producción anual\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Costo de Producción (C): \r\n          <input\r\n            type=\"number\"\r\n            value={productionCost}\r\n            onChange={(e) => setProductionCost(e.target.value)}\r\n            placeholder=\"Ingrese el costo de producción\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Costo de Preparación (Co): \r\n          <input\r\n            type=\"number\"\r\n            value={orderingCost}\r\n            onChange={(e) => setOrderingCost(e.target.value)}\r\n            placeholder=\"Ingrese el costo de preparación\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Días Hábiles (DH): \r\n          <input\r\n            type=\"number\"\r\n            value={workingDays}\r\n            onChange={(e) => setWorkingDays(e.target.value)}\r\n            placeholder=\"Ingrese los días hábiles\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      {/* Selección entre Ch o Interés */}\r\n      <div style={{ margin: '10px' }}>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            checked={!useInterest}\r\n            onChange={() => setUseInterest(false)}\r\n          />\r\n          Ingresar Costo de Retención (Ch)\r\n        </label>\r\n        <label style={{ marginLeft: '20px' }}>\r\n          <input\r\n            type=\"radio\"\r\n            checked={useInterest}\r\n            onChange={() => setUseInterest(true)}\r\n          />\r\n          Usar Interés (I)\r\n        </label>\r\n      </div>\r\n\r\n      {!useInterest && (\r\n        <div>\r\n          <label>\r\n            Costo de Retención (Ch): \r\n            <input\r\n              type=\"number\"\r\n              value={holdingCost}\r\n              onChange={(e) => setHoldingCost(e.target.value)}\r\n              placeholder=\"Ingrese el costo de retención\"\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n      )}\r\n\r\n      {useInterest && (\r\n        <div>\r\n          <label>\r\n            Interés (I) [%]: \r\n            <input\r\n              type=\"number\"\r\n              value={interestRate}\r\n              onChange={(e) => setInterestRate(e.target.value)}\r\n              placeholder=\"Ingrese el interés (%)\"\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={calculateEPQ} style={{ margin: '10px' }}>Calcular</button>\r\n\r\n      {results && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Resultados:</h3>\r\n          <p>Tamaño del lote de producción (Q*): {results.Q} unidades</p>\r\n          <p>Tiempo de ciclo (T): {results.T} días</p>\r\n          <p>Producción diaria (p): {results.p} unidades</p>\r\n          <p>Duración de la fase de producción (t): {results.t} días</p>\r\n          <p>Costo anual de retención: {results.holdingCostAnnual}</p>\r\n          <p>Costo anual de preparación: {results.preparationCostAnnual}</p>\r\n          <p>Costo total anual (TC): {results.totalCost}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EPQCalculator;\r\n","import React, { useState } from 'react';\r\n\r\nfunction MIFPCalculator() {\r\n  // Definimos los estados para cada dato ingresado\r\n  const [D, setD] = useState(); // Demanda anual\r\n  const [C, setC] = useState(); // Costo unitario\r\n  const [Ch, setCh] = useState(); // Costo de almacenamiento\r\n  const [Co, setCo] = useState(); // Costo por pedido\r\n  const [Cf, setCf] = useState(); // Costo por unidad faltante\r\n  const [diasHabiles, setDiasHabiles] = useState(); // Días hábiles\r\n \r\n\r\n  // Función para calcular la cantidad óptima de pedido (Q)\r\n  const calcularQ = () => {\r\n    return Math.sqrt(((2 * Co * D) / Ch)*(Ch + Cf)/Cf);\r\n  };\r\n\r\n  // Función para calcular los faltantes permitidos (S)\r\n  const calcularS = (Q) => {\r\n    return (Ch / (Ch + Cf)) * Q;\r\n  };\r\n\r\n  // Función para calcular el tiempo de ciclo entre pedidos (T)\r\n  const calcularT = (Q) => {\r\n    return (diasHabiles * Q) / D;\r\n  };\r\n\r\n  // Función para calcular el tiempo de duración de inventario (t1)\r\n  const calcularT1 = (Q, S, T) => {\r\n    return ((Q - S) / Q) * T;\r\n  };\r\n\r\n  // Función para calcular el tiempo de escasez (t2)\r\n  const calcularT2 = (T, t1) => {\r\n    return (T - t1);\r\n  };\r\n\r\n  // Función para calcular el inventario máximo (Imax)\r\n  const calcularImax = (Q, S) => {\r\n    return Q - S;\r\n  };\r\n\r\n  // Función para calcular el inventario promedio (Iprom)\r\n  const calcularIprom = (Imax) => {\r\n    return (Imax ** 2) / (2 * Q);\r\n  };\r\n\r\n  // Función para calcular el número de órdenes por año (N)\r\n  const calcularN = (Q) => {\r\n    return D / Q;\r\n  };\r\n\r\n  // Función para calcular el costo de inversión anual en inventario (Cinv)\r\n  const calcularCinv = (C, D,CT) => {\r\n    return (D * C )+CT;\r\n  };\r\n\r\n  // Función para calcular el costo total anual (CT)\r\n  const calcularCT = (Q, S) => {\r\n    return (D / Q) * Co + (Ch * (Q - S) ** 2) / (2 * Q) + (Cf * S ** 2) / (2 * Q);\r\n  };\r\n\r\n  // Calcular resultados basados en la cantidad óptima de pedido (Q)\r\n  const Q = calcularQ();\r\n  const S = calcularS(Q);\r\n  const T = calcularT(Q);\r\n  const t1 = calcularT1(Q, S, T);\r\n  const t2 = calcularT2(T, t1);\r\n  const Imax = calcularImax(Q, S);\r\n  const Iprom = calcularIprom(Imax);\r\n  const N = calcularN(Q);\r\n  const CT = calcularCT(Q, S);\r\n  const Cinv = calcularCinv(C, D, CT);\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <h1>Calculadora de Modelo de Inventario con Faltantes Planeado (MIFP)</h1>\r\n      <label>Cantidad anual requerida (D):</label>\r\n      <input type=\"number\" value={D} onChange={(e) => setD(Number(e.target.value))} />\r\n      <label>Costo unitario (C):</label>\r\n      <input type=\"number\" value={C} onChange={(e) => setC(Number(e.target.value))} />\r\n      <label>Costo por almacenamiento (Ch):</label>\r\n      <input type=\"number\" value={Ch} onChange={(e) => setCh(Number(e.target.value))} />\r\n      <label>Costo por pedido (Co):</label>\r\n      <input type=\"number\" value={Co} onChange={(e) => setCo(Number(e.target.value))} />\r\n      <label>Costo por unidad faltante (Cf):</label>\r\n      <input type=\"number\" value={Cf} onChange={(e) => setCf(Number(e.target.value))} />\r\n      <label>Días hábiles:</label>\r\n      <input type=\"number\" value={diasHabiles} onChange={(e) => setDiasHabiles(Number(e.target.value))} />\r\n\r\n      <h2>Resultados</h2>\r\n      <h3>Cantidad óptima de pedido (Q): {Q.toFixed(2)}</h3>\r\n<h3>Faltantes permitidos (S): {S.toFixed(2)}</h3>\r\n<h3>Tiempo de ciclo entre pedidos (T): {T.toFixed(2)}</h3>\r\n<h3>Tiempo de duración de inventario (t1): {t1.toFixed(2)}</h3>\r\n<h3>Tiempo de escasez (t2): {t2.toFixed(2)}</h3>\r\n<h3>Inventario máximo (Imax): {Imax.toFixed(2)}</h3>\r\n<h3>Inventario promedio (Iprom): {Iprom.toFixed(2)}</h3>\r\n<h3>Número de órdenes por año (N): {N.toFixed(2)}</h3>\r\n<h3>Costo de inversión anual en inventario (Cinv): {Cinv.toFixed(2)}</h3>\r\n<h3>Costo total anual (CT): {CT.toFixed(2)}</h3>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MIFPCalculator;\r\n","import React, { useState } from 'react';\r\n\r\nfunction QuantityDiscountCalculator() {\r\n  const [demand, setDemand] = useState(''); // D: Demanda anual\r\n  const [orderingCost, setOrderingCost] = useState(''); // Co: Costo por pedido\r\n  const [interestRate, setInterestRate] = useState(''); // I: Tasa de interés (Almacenamiento)\r\n  const [discountLevels, setDiscountLevels] = useState([{ minQty: '', maxQty: '', price: '' }]);\r\n  const [optimalQuantity, setOptimalQuantity] = useState(null);\r\n  const [minTotalCost, setMinTotalCost] = useState(null);\r\n  const [results, setResults] = useState([]); // Para mostrar los resultados intermedios de cada nivel\r\n\r\n  // Manejo de cambios en los niveles de descuento\r\n  const handleDiscountChange = (index, field, value) => {\r\n    const newDiscountLevels = [...discountLevels];\r\n    newDiscountLevels[index][field] = value;\r\n    setDiscountLevels(newDiscountLevels);\r\n  };\r\n\r\n  // Agregar nuevo nivel de descuento\r\n  const addDiscountLevel = () => {\r\n    setDiscountLevels([...discountLevels, { minQty: '', maxQty: '', price: '' }]);\r\n  };\r\n\r\n  // Fórmula para calcular el EOQ\r\n  const calculateEOQ = (D, Co, I, P) => {\r\n    return Math.sqrt((2 * D * Co) / (I * P));\r\n  };\r\n\r\n  // Cálculo de Costo Total (TC) por cada nivel de descuento\r\n  const calculateCost = (Q, Co, I, P, D) => {\r\n    const H = I * P; // Costo de almacenamiento H = I * P\r\n    const totalCost = (D / Q) * Co + (Q / 2) * H + D * P;\r\n    return totalCost;\r\n  };\r\n\r\n  // Cálculo del pedido óptimo\r\n  const calculateOptimalOrder = () => {\r\n    if (demand && orderingCost && interestRate && discountLevels.every(level => level.minQty && level.price)) {\r\n      let minCost = Infinity;\r\n      let optimalQ = null;\r\n      const resultDetails = [];\r\n\r\n      discountLevels.forEach(level => {\r\n        const D = parseFloat(demand);\r\n        const Co = parseFloat(orderingCost);\r\n        const I = parseFloat(interestRate) / 100; // Convertir a porcentaje\r\n        const P = parseFloat(level.price);\r\n        const minQty = parseFloat(level.minQty);\r\n        const maxQty = parseFloat(level.maxQty) || Infinity; // Si no hay un máximo, es infinito\r\n\r\n        // Cálculo del EOQ para el nivel de descuento actual\r\n        let QStar = calculateEOQ(D, Co, I, P);\r\n\r\n        // Ajuste de EOQ si no está dentro del rango de descuento\r\n        if (QStar < minQty) {\r\n          QStar = minQty;\r\n        } else if (QStar > maxQty) {\r\n          QStar = maxQty;\r\n        }\r\n\r\n        // Cálculo del Costo Total para el EOQ ajustado\r\n        const totalCost = calculateCost(QStar, Co, I, P, D);\r\n\r\n        // Guardar los resultados intermedios para mostrar al usuario\r\n        resultDetails.push({\r\n          minQty,\r\n          maxQty: maxQty === Infinity ? '∞' : maxQty,\r\n          price: P,\r\n          EOQ: QStar.toFixed(2),\r\n          totalCost: totalCost.toFixed(2),\r\n        });\r\n\r\n        // Comparamos los costos totales para encontrar el mínimo\r\n        if (totalCost < minCost) {\r\n          minCost = totalCost;\r\n          optimalQ = QStar;\r\n        }\r\n      });\r\n\r\n      setResults(resultDetails);\r\n      setOptimalQuantity(optimalQ.toFixed(2)); // Redondeamos a 2 decimales\r\n      setMinTotalCost(minCost.toFixed(2));\r\n    } else {\r\n      alert('Por favor, complete todos los campos y niveles de descuento.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h2>Modelo de Descuentos por Cantidad (EOQ)</h2>\r\n\r\n      {/* Inputs para los valores principales */}\r\n      <div>\r\n        <label>\r\n          Demanda Anual (D): \r\n          <input\r\n            type=\"number\"\r\n            value={demand}\r\n            onChange={(e) => setDemand(e.target.value)}\r\n            placeholder=\"Ingrese la demanda anual\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Costo por Pedido (Co): \r\n          <input\r\n            type=\"number\"\r\n            value={orderingCost}\r\n            onChange={(e) => setOrderingCost(e.target.value)}\r\n            placeholder=\"Ingrese el costo por pedido\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Tasa de Interés (%): \r\n          <input\r\n            type=\"number\"\r\n            value={interestRate}\r\n            onChange={(e) => setInterestRate(e.target.value)}\r\n            placeholder=\"Ingrese la tasa de interés (%)\"\r\n            style={{ margin: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <h3>Niveles de Descuento</h3>\r\n      {discountLevels.map((level, index) => (\r\n        <div key={index}>\r\n          <label>\r\n            Cantidad Mínima ({index + 1}): \r\n            <input\r\n              type=\"number\"\r\n              value={level.minQty}\r\n              onChange={(e) => handleDiscountChange(index, 'minQty', e.target.value)}\r\n              placeholder=\"Cantidad mínima para descuento\"\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Cantidad Máxima ({index + 1}): \r\n            <input\r\n              type=\"number\"\r\n              value={level.maxQty}\r\n              onChange={(e) => handleDiscountChange(index, 'maxQty', e.target.value)}\r\n              placeholder=\"Cantidad máxima para descuento (opcional)\"\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Precio Unitario ({index + 1}): \r\n            <input\r\n              type=\"number\"\r\n              value={level.price}\r\n              onChange={(e) => handleDiscountChange(index, 'price', e.target.value)}\r\n              placeholder=\"Precio por unidad\"\r\n              style={{ margin: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n      ))}\r\n\r\n      <button onClick={addDiscountLevel} style={{ margin: '10px' }}>Agregar Nivel de Descuento</button>\r\n      <button onClick={calculateOptimalOrder} style={{ margin: '10px' }}>Calcular Pedido Óptimo</button>\r\n\r\n      {results.length > 0 && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Resultados Intermedios</h3>\r\n          <table style={{ margin: '0 auto', border: '1px solid black' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Cantidad Mínima</th>\r\n                <th>Cantidad Máxima</th>\r\n                <th>Precio Unitario</th>\r\n                <th>EOQ Calculado</th>\r\n                <th>Costo Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {results.map((result, index) => (\r\n                <tr key={index}>\r\n                  <td>{result.minQty}</td>\r\n                  <td>{result.maxQty}</td>\r\n                  <td>{result.price}</td>\r\n                  <td>{result.EOQ}</td>\r\n                  <td>{result.totalCost}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {optimalQuantity && minTotalCost && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Cantidad Óptima de Pedido: {optimalQuantity} unidades</h3>\r\n          <h3>Costo Total Mínimo: {minTotalCost} </h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuantityDiscountCalculator;\r\n","import React, { useState } from 'react';\r\nimport './ArbolesDecision.css'; // Se agregará el CSS actualizado para reflejar los cambios\r\n\r\nfunction ArbolesDecision() {\r\n  const [nodos, setNodos] = useState([\r\n    { id: '1', nombre: 'Nodo Principal', probabilidad: 'N/A', valor: 'N/A', hijos: [] }\r\n  ]);\r\n  const [nodoSeleccionado, setNodoSeleccionado] = useState(null);\r\n  const [cantidadNodos, setCantidadNodos] = useState(1);\r\n  const [metodoSeleccionado, setMetodoSeleccionado] = useState('max'); // Opción para elegir entre máximo o mínimo\r\n  const [decisionRecomendada, setDecisionRecomendada] = useState(null); // Para almacenar la decisión recomendada\r\n\r\n  const agregarNodos = () => {\r\n    if (!nodoSeleccionado) return;\r\n    const nuevosNodos = [...nodos];\r\n    const nodo = buscarNodo(nodoSeleccionado, nuevosNodos);\r\n    const numHijos = nodo.hijos.length;\r\n    for (let i = 1; i <= cantidadNodos; i++) {\r\n      nodo.hijos.push({\r\n        id: `${nodoSeleccionado}.${numHijos + i}`,\r\n        nombre: '',\r\n        probabilidad: '',\r\n        valor: '',\r\n        hijos: []\r\n      });\r\n    }\r\n    setNodos(nuevosNodos);\r\n  };\r\n\r\n  const eliminarNodo = () => {\r\n    if (!nodoSeleccionado) return;\r\n    const nuevosNodos = eliminarNodoPorId(nodoSeleccionado, [...nodos]);\r\n    setNodos(nuevosNodos);\r\n    setNodoSeleccionado(null);\r\n  };\r\n\r\n  const buscarNodo = (id, lista) => {\r\n    for (const nodo of lista) {\r\n      if (nodo.id === id) return nodo;\r\n      const encontrado = buscarNodo(id, nodo.hijos);\r\n      if (encontrado) return encontrado;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const eliminarNodoPorId = (id, lista) => {\r\n    return lista.filter(nodo => {\r\n      if (nodo.id === id) return false;\r\n      nodo.hijos = eliminarNodoPorId(id, nodo.hijos);\r\n      return true;\r\n    });\r\n  };\r\n\r\n  // Esta función actualiza el estado de los nodos cuando cambian los inputs\r\n  const actualizarNodo = (id, campo, valor) => {\r\n    const nuevosNodos = [...nodos];\r\n\r\n    const nodo = buscarNodo(id, nuevosNodos);\r\n    if (nodo) {\r\n      nodo[campo] = valor;\r\n      setNodos(nuevosNodos);\r\n    }\r\n  };\r\n\r\n  const calcularValorNodo = (nodo) => {\r\n    // Si el nodo no tiene hijos, devolvemos su valor actual\r\n    if (nodo.hijos.length === 0) {\r\n      return parseFloat(nodo.valor) || 0;\r\n    }\r\n  \r\n    // Si el nodo tiene hijos, calculamos el valor esperado\r\n    let valorEsperado = 0;\r\n    nodo.hijos.forEach(hijo => {\r\n      const probabilidad = parseFloat(hijo.probabilidad) || 0;\r\n      const valorHijo = calcularValorNodo(hijo);\r\n      valorEsperado += probabilidad * valorHijo;\r\n    });\r\n  \r\n    // Aquí sumamos el valor calculado de los hijos al valor actual del nodo padre\r\n    const valorPadre = parseFloat(nodo.valor) || 0;\r\n    nodo.valor = (valorPadre + valorEsperado).toFixed(2);\r\n    \r\n    return valorPadre + valorEsperado;\r\n  };\r\n  \r\n\r\n  // Función para calcular la decisión recomendada basada en el método seleccionado\r\n  const calcularDecisionRecomendada = (nodoPrincipal) => {\r\n    if (nodoPrincipal.hijos.length === 0) return;\r\n\r\n    let mejorValor;\r\n    let mejorActividad;\r\n\r\n    if (metodoSeleccionado === 'max') {\r\n      // Encontrar el hijo con el valor máximo\r\n      mejorValor = Math.max(...nodoPrincipal.hijos.map(hijo => parseFloat(hijo.valor) || 0));\r\n      mejorActividad = nodoPrincipal.hijos.find(hijo => parseFloat(hijo.valor) === mejorValor);\r\n    } else {\r\n      // Encontrar el hijo con el valor mínimo\r\n      mejorValor = Math.min(...nodoPrincipal.hijos.map(hijo => parseFloat(hijo.valor) || 0));\r\n      mejorActividad = nodoPrincipal.hijos.find(hijo => parseFloat(hijo.valor) === mejorValor);\r\n    }\r\n\r\n    setDecisionRecomendada({\r\n      nombre: mejorActividad.nombre,\r\n      valor: mejorValor\r\n    });\r\n  };\r\n\r\n  const calcularValores = () => {\r\n    const nuevosNodos = [...nodos];\r\n    nuevosNodos.forEach(nodo => calcularValorNodo(nodo));\r\n    setNodos(nuevosNodos);\r\n\r\n    // Calcular el resultado final desde el nodo principal\r\n    \r\n\r\n    // Calcular la decisión recomendada\r\n    calcularDecisionRecomendada(nuevosNodos[0]);\r\n  };\r\n\r\n  const renderNodos = (nodos, nivel = 0) => {\r\n    return nodos.map((nodo) => (\r\n      <React.Fragment key={nodo.id}>\r\n        <tr\r\n          onClick={() => setNodoSeleccionado(nodo.id)}\r\n          className={`${nodoSeleccionado === nodo.id ? 'seleccionado' : ''} nivel-${nivel}`} // Aplicar clase basada en el nivel\r\n          style={{ paddingLeft: `${nivel * 20}px` }} // Mantener la indentación\r\n        >\r\n          <td>{nodo.id}</td>\r\n          <td><input type=\"text\" value={nodo.nombre} placeholder=\"Nombre\" onChange={(e) => actualizarNodo(nodo.id, 'nombre', e.target.value)} /></td>\r\n          <td><input type=\"text\" value={nodo.probabilidad} placeholder=\"Probabilidad\" onChange={(e) => actualizarNodo(nodo.id, 'probabilidad', e.target.value)} /></td>\r\n          <td><input type=\"text\" value={nodo.valor} placeholder=\"Valor\" onChange={(e) => actualizarNodo(nodo.id, 'valor', e.target.value)} /></td>\r\n        </tr>\r\n        {renderNodos(nodo.hijos, nivel + 1)} {/* Incrementar el nivel para los hijos */}\r\n      </React.Fragment>\r\n    ));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"arbol-decision-contenedor\">\r\n      <h1>Árbol de Decisiones</h1>\r\n      <table className=\"arbol-decision-tabla\">\r\n        <thead>\r\n          <tr>\r\n            <th>Número de Actividad</th>\r\n            <th>Nombre</th>\r\n            <th>Probabilidad</th>\r\n            <th>Valor</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderNodos(nodos)}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"acciones\">\r\n        <p>Acciones para el nodo seleccionado: {nodoSeleccionado}</p>\r\n        <label>Cantidad de nodos a agregar:\r\n          <input type=\"number\" value={cantidadNodos} onChange={(e) => setCantidadNodos(Number(e.target.value))} />\r\n        </label>\r\n        <div className=\"botones\">\r\n          <button onClick={agregarNodos} className=\"btn agregar\">Agregar Nodos</button>\r\n          <button onClick={eliminarNodo} className=\"btn eliminar\">Eliminar Nodo Seleccionado</button>\r\n          <button onClick={calcularValores} className=\"btn calcular\">Calcular Valores</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"metodo-seleccionado\">\r\n        <label>Método de decisión:\r\n          <select value={metodoSeleccionado} onChange={(e) => setMetodoSeleccionado(e.target.value)}>\r\n            <option value=\"max\">Máximo</option>\r\n            <option value=\"min\">Mínimo</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      \r\n\r\n      {decisionRecomendada !== null && (\r\n        <div className=\"decision-recomendada\">\r\n          <h2>La decisión recomendada por el método del valor esperado es \"{decisionRecomendada.nombre}\" y su valor es {decisionRecomendada.valor}</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArbolesDecision;\r\n","import React, { useState } from 'react';\r\n\r\nfunction Incertidumbre() {\r\n  const [matriz, setMatriz] = useState([['', '']]); // Inicia con 1 fila y 2 columnas\r\n  const [filas, setFilas] = useState(1);\r\n  const [columnas, setColumnas] = useState(2);\r\n  const [criterio, setCriterio] = useState('Laplace');\r\n  const [resultado, setResultado] = useState(null);\r\n  const [alpha, setAlpha] = useState(0.5); // Usado para el criterio de Hurwicz\r\n\r\n  const agregarFila = () => {\r\n    const nuevaFila = Array(columnas).fill('');\r\n    setMatriz([...matriz, nuevaFila]);\r\n    setFilas(filas + 1);\r\n  };\r\n\r\n  const agregarColumna = () => {\r\n    const nuevaMatriz = matriz.map(fila => [...fila, '']);\r\n    setMatriz(nuevaMatriz);\r\n    setColumnas(columnas + 1);\r\n  };\r\n\r\n  const manejarCambio = (i, j, valor) => {\r\n    const nuevaMatriz = [...matriz];\r\n    nuevaMatriz[i][j] = valor;\r\n    setMatriz(nuevaMatriz);\r\n  };\r\n\r\n  // Funciones para calcular los criterios de decisión\r\n  const calcularLaplace = () => {\r\n    const sumas = matriz.map(fila => fila.reduce((acc, val) => acc + parseFloat(val || 0), 0) / columnas);\r\n    const mejorAlternativa = sumas.indexOf(Math.max(...sumas)) + 1;\r\n    setResultado(`La mejor alternativa según Laplace es la alternativa ${mejorAlternativa}`);\r\n  };\r\n\r\n  const calcularOptimista = () => {\r\n    const mejoresValores = matriz.map(fila => Math.max(...fila.map(val => parseFloat(val || 0))));\r\n    const mejorAlternativa = mejoresValores.indexOf(Math.max(...mejoresValores)) + 1;\r\n    setResultado(`La mejor alternativa según el criterio Optimista es la alternativa ${mejorAlternativa}`);\r\n  };\r\n\r\n  const calcularPesimista = () => {\r\n    const peoresValores = matriz.map(fila => Math.min(...fila.map(val => parseFloat(val || 0))));\r\n    const mejorAlternativa = peoresValores.indexOf(Math.max(...peoresValores)) + 1;\r\n    setResultado(`La mejor alternativa según el criterio Pesimista es la alternativa ${mejorAlternativa}`);\r\n  };\r\n\r\n  const calcularHurwicz = () => {\r\n    const valoresHurwicz = matriz.map(fila => {\r\n      const maxVal = Math.max(...fila.map(val => parseFloat(val || 0)));\r\n      const minVal = Math.min(...fila.map(val => parseFloat(val || 0)));\r\n      return alpha * maxVal + (1 - alpha) * minVal;\r\n    });\r\n    const mejorAlternativa = valoresHurwicz.indexOf(Math.max(...valoresHurwicz)) + 1;\r\n    setResultado(`La mejor alternativa según Hurwicz con α=${alpha} es la alternativa ${mejorAlternativa}`);\r\n  };\r\n\r\n  const calcularSavage = () => {\r\n    const maximosColumna = Array(columnas).fill(0).map((_, j) => Math.max(...matriz.map(fila => parseFloat(fila[j] || 0))));\r\n    const matrizOportunidad = matriz.map(fila => fila.map((val, j) => maximosColumna[j] - parseFloat(val || 0)));\r\n    const peoresOportunidades = matrizOportunidad.map(fila => Math.max(...fila));\r\n    const mejorAlternativa = peoresOportunidades.indexOf(Math.min(...peoresOportunidades)) + 1;\r\n    setResultado(`La mejor alternativa según el criterio de Savage es la alternativa ${mejorAlternativa}`);\r\n  };\r\n\r\n  const calcularResultado = () => {\r\n    switch (criterio) {\r\n      case 'Laplace':\r\n        calcularLaplace();\r\n        break;\r\n      case 'Optimista':\r\n        calcularOptimista();\r\n        break;\r\n      case 'Pesimista':\r\n        calcularPesimista();\r\n        break;\r\n      case 'Hurwicz':\r\n        calcularHurwicz();\r\n        break;\r\n      case 'Savage':\r\n        calcularSavage();\r\n        break;\r\n      default:\r\n        setResultado('Selecciona un criterio válido');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Decisiones bajo Incertidumbre</h1>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Alternativas / Sucesos</th>\r\n            {Array.from({ length: columnas }, (_, i) => <th key={i}>Suceso {i + 1}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {matriz.map((fila, i) => (\r\n            <tr key={i}>\r\n              <td>Alternativa {i + 1}</td>\r\n              {fila.map((valor, j) => (\r\n                <td key={j}>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={valor}\r\n                    onChange={e => manejarCambio(i, j, e.target.value)}\r\n                  />\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <button onClick={agregarFila}>Agregar Fila (Alternativa)</button>\r\n      <button onClick={agregarColumna}>Agregar Columna (Suceso)</button>\r\n\r\n      <div>\r\n        <label>Selecciona el criterio:</label>\r\n        <select value={criterio} onChange={e => setCriterio(e.target.value)}>\r\n          <option value=\"Laplace\">Laplace</option>\r\n          <option value=\"Optimista\">Optimista</option>\r\n          <option value=\"Pesimista\">Pesimista</option>\r\n          <option value=\"Hurwicz\">Hurwicz</option>\r\n          <option value=\"Savage\">Savage</option>\r\n        </select>\r\n      </div>\r\n\r\n      {criterio === 'Hurwicz' && (\r\n        <div>\r\n          <label>Coeficiente de optimismo (α):</label>\r\n          <input\r\n            type=\"number\"\r\n            value={alpha}\r\n            step=\"0.1\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            onChange={e => setAlpha(parseFloat(e.target.value))}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={calcularResultado}>Calcular Resultado</button>\r\n\r\n      {resultado && <h2>{resultado}</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Incertidumbre;\r\n","// ColasPoissonExponencial.jsx\r\nimport React, { useState } from 'react';\r\n\r\nfunction ColasPoissonExponencial() {\r\n  const [lambda, setLambda] = useState('');\r\n  const [mu, setMu] = useState('');\r\n  const [n, setN] = useState('');\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularColas = () => {\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const nNum = parseFloat(n);\r\n\r\n    if (muNum > lambdaNum) {\r\n      const Lq = (Math.pow(lambdaNum, 2)) / (muNum * (muNum - lambdaNum));\r\n      const L = Lq + (lambdaNum / muNum);\r\n      const Po = 1 - (lambdaNum / muNum);\r\n      const Wq = (Lq / lambdaNum) * 60; // Convertir a minutos\r\n      const W = Wq + (1 / muNum) * 60; // Convertir a minutos correctamente\r\n      const Pw = lambdaNum / muNum;\r\n      const Pn = Math.pow((lambdaNum / muNum), nNum) * Po;\r\n      setResultado({ L, Lq, Po, Wq, W, Pw, Pn });\r\n    } else {\r\n      alert(\"El valor de μ debe ser mayor que λ.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo de Colas: Un Servidor / Llegadas Poisson / Servicios Exponenciales</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          valor para n unidades (n):\r\n          <input\r\n            type=\"number\"\r\n            value={n}\r\n            onChange={(e) => setN(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularColas} style={{ display: 'block', margin: '20px auto' }}>Calcular</button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '60%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>Parámetro</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>Valor</th>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>L (N° promedio de unidades en el sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.L.toFixed(2)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (N° promedio de unidades en la línea de espera)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Lq.toFixed(2)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Po (Probabilidad de que no haya unidades en el sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Po.toFixed(1)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en la línea de espera)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Wq} minutos</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>W (Tiempo promedio en el sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.W} minutos</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Pw (Probabilidad de que una unidad no espere para ser atendida)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Pw.toFixed(2)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Pn (Probabilidad de que haya n unidades en el sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Pn.toFixed(2)}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColasPoissonExponencial;\r\n","import React, { useState } from 'react';\r\n\r\nfunction ColasPoissonExponencial() {\r\n  const [lambda, setLambda] = useState('');\r\n  const [mu, setMu] = useState('');\r\n  const [servidores, setServidores] = useState('');\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularFactorial = (n) => {\r\n    return n === 0 ? 1 : n * calcularFactorial(n - 1);\r\n  };\r\n\r\n  const calcularResultados = () => {\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const servidoresNum = parseInt(servidores);\r\n\r\n    if (!lambdaNum || !muNum || !servidoresNum || servidoresNum <= 0) {\r\n      alert(\"Por favor, ingresa valores válidos para λ, μ y número de servidores.\");\r\n      return;\r\n    }\r\n\r\n    const rho = lambdaNum / (servidoresNum * muNum); // p = ρ\r\n\r\n    // Calcular P0\r\n    let sumaParte1 = 0;\r\n    for (let n = 0; n < servidoresNum; n++) {\r\n      sumaParte1 += Math.pow(lambdaNum / muNum, n) / calcularFactorial(n);\r\n    }\r\n    const parte2 =\r\n      Math.pow(lambdaNum / muNum, servidoresNum) /\r\n      (calcularFactorial(servidoresNum) * (1 - rho));\r\n    const Po = 1 / (sumaParte1 + parte2);\r\n\r\n    // Calcular Lq\r\n    const Lq =\r\n      (Po *\r\n        Math.pow(lambdaNum / muNum, servidoresNum) *\r\n        rho) /\r\n      (calcularFactorial(servidoresNum) * Math.pow(1 - rho, 2));\r\n\r\n    // Calcular Wq (en minutos)\r\n    const Wq = (Lq / lambdaNum) ;\r\n\r\n    // Calcular Ws (en minutos)\r\n    const Ws = (Wq + 1 / muNum) ;\r\n\r\n    setResultado({ Po: Po * 100, rho: rho * 100, Lq, Wq: Wq*60, Ws:Ws *60 });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo de varios servidores / Llegadas Poisson / Servicios Exponenciales</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Número de servidores (s):\r\n          <input\r\n            type=\"number\"\r\n            value={servidores}\r\n            onChange={(e) => setServidores(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularResultados} style={{ display: 'block', margin: '20px auto' }}>\r\n        Calcular\r\n      </button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Parámetro\r\n                </th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Valor\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>ρ (Utilización promedio)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.rho.toFixed(1)}%\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>P₀ (Probabilidad de 0 clientes)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Po.toFixed(2)}%\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (Clientes promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Lq.toFixed(2)} clientes\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Wq.toFixed(2)} minutos\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ws (Tiempo promedio en el sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Ws.toFixed(2)} minutos\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColasPoissonExponencial;\r\n","import React, { useState } from 'react';\r\n\r\nfunction NacimientoMuerte() {\r\n  const [lambda, setLambda] = useState('');\r\n  const [mu, setMu] = useState('');\r\n  const [servidores, setServidores] = useState('');\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularFactorial = (n) => {\r\n    if (n < 0) {\r\n      throw new Error(\"El factorial no está definido para números negativos.\");\r\n    }\r\n    let resultado = 1;\r\n    for (let i = 1; i <= n; i++) {\r\n      resultado *= i;\r\n    }\r\n    return resultado;\r\n  };\r\n  \r\n\r\n  const calcularResultados = () => {\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const servidoresNum = parseInt(servidores);\r\n\r\n    if (!lambdaNum || !muNum || !servidoresNum || servidoresNum <= 0) {\r\n      alert(\"Por favor, ingresa valores válidos para λ, μ y número de servidores.\");\r\n      return;\r\n    }\r\n\r\n    const rho = lambdaNum / (servidoresNum * muNum);\r\n\r\n  \r\n    let sumaParte1 = 0;\r\n    for (let n = 0; n < servidoresNum; n++) {\r\n      sumaParte1 += Math.pow(lambdaNum / muNum, n) / calcularFactorial(n);\r\n    }\r\n    const parte2 =\r\n      Math.pow(lambdaNum / muNum, servidoresNum) /\r\n      (calcularFactorial(servidoresNum) * (1 - rho));\r\n    const Po = 1 / (sumaParte1 + parte2);\r\n\r\n    const Ls = lambdaNum / muNum + (rho * Math.pow(lambdaNum / muNum, servidoresNum) * Po) / calcularFactorial(servidoresNum * Math.pow(1 - rho, 2));\r\n\r\n\r\n    const Lq = Ls - lambdaNum / muNum;\r\n\r\n  \r\n    const Ws = (Ls / lambdaNum);\r\n\r\n   \r\n    const Wq = (Lq / lambdaNum);\r\n\r\n    setResultado({ Po: Po * 100, rho: rho * 100, Ls, Lq, Wq: Wq*60, Ws: Ws*60 });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo de Nacimiento y Muerte</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Número de servidores (s):\r\n          <input\r\n            type=\"number\"\r\n            value={servidores}\r\n            onChange={(e) => setServidores(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularResultados} style={{ display: 'block', margin: '20px auto' }}>\r\n        Calcular\r\n      </button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Parámetro\r\n                </th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Valor\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>ρ (Utilización promedio)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.rho.toFixed(1)}%\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>P₀ (Probabilidad de 0 clientes)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Po.toFixed(2)}%\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ls (Clientes promedio en sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Ls.toFixed(2)} clientes\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (Clientes promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Lq.toFixed(2)} clientes\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Wq.toFixed(2)} minutos\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ws (Tiempo promedio en sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                  {resultado.Ws.toFixed(2)} minutos\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NacimientoMuerte;\r\n","import React, { useState } from 'react';\r\n\r\nfunction ModeloLineaEsperaMG1() {\r\n  const [lambda, setLambda] = useState('');\r\n  const [mu, setMu] = useState('');\r\n  const [varianza, setVarianza] = useState('');\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularResultados = () => {\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const sigma2 = parseFloat(varianza);\r\n\r\n    if (!lambdaNum || !muNum || !sigma2 || lambdaNum <= 0 || muNum <= 0 || sigma2 < 0) {\r\n      alert(\"Por favor, ingresa valores válidos para λ, μ y la varianza.\");\r\n      return;\r\n    }\r\n\r\n    const rho = lambdaNum / muNum;\r\n\r\n    if (rho >= 1) {\r\n      alert(\"El sistema no es estable (ρ ≥ 1). Verifica los valores de λ y μ.\");\r\n      return;\r\n    }\r\n\r\n    // Probabilidad de que el sistema esté vacío (P₀)\r\n    const P0 = 1 - rho;\r\n\r\n    // Clientes promedio en la cola (Lq)\r\n    const Lq = (Math.pow(lambdaNum, 2) * sigma2 + Math.pow(rho, 2)) / (2 * (1 - rho));\r\n\r\n    // Clientes promedio en el sistema (Ls)\r\n    const Ls = Lq + lambdaNum / muNum;\r\n\r\n    // Tiempo promedio en cola (Wq)\r\n    const Wq = Lq / lambdaNum;\r\n\r\n    // Tiempo promedio en el sistema (Ws)\r\n    const Ws = Wq + 1 / muNum;\r\n\r\n    setResultado({\r\n      P0: P0 * 100,\r\n      rho: rho * 100,\r\n      Ls,\r\n      Lq,\r\n      Wq: Wq * 60, // Convertir a minutos\r\n      Ws: Ws * 60, // Convertir a minutos\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo M/G/1</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Varianza del tiempo de servicio (σ²):\r\n          <input\r\n            type=\"number\"\r\n            value={varianza}\r\n            onChange={(e) => setVarianza(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularResultados} style={{ display: 'block', margin: '20px auto' }}>\r\n        Calcular\r\n      </button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Parámetro\r\n                </th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Valor\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>P₀ (Probabilidad de sistema vacío)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.P0.toFixed(2)}%</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>ρ (Utilización promedio)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.rho.toFixed(2)}%</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ls (Clientes promedio en sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Ls.toFixed(2)} clientes</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (Clientes promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Lq.toFixed(2)} clientes</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en cola)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Wq.toFixed(2)} minutos</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ws (Tiempo promedio en sistema)</td>\r\n                <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Ws.toFixed(2)} minutos</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModeloLineaEsperaMG1;\r\n","import React, { useState } from 'react';\r\n\r\nfunction MultiplesServidoresSinEspera() {\r\n  const [lambda, setLambda] = useState('');\r\n  const [mu, setMu] = useState('');\r\n  const [servidores, setServidores] = useState('');\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularFactorial = (n) => {\r\n    if (n < 0) {\r\n      throw new Error(\"El factorial no está definido para números negativos.\");\r\n    }\r\n    let resultado = 1;\r\n    for (let i = 1; i <= n; i++) {\r\n      resultado *= i;\r\n    }\r\n    return resultado;\r\n  };\r\n\r\n  const calcularResultados = () => {\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const servidoresNum = parseInt(servidores);\r\n\r\n    if (!lambdaNum || !muNum || !servidoresNum || servidoresNum <= 0) {\r\n      alert(\"Por favor, ingresa valores válidos para λ, μ y número de servidores.\");\r\n      return;\r\n    }\r\n\r\n    const rho = lambdaNum / (servidoresNum * muNum);\r\n    if (rho > 1) {\r\n      alert(\"El sistema es inestable (ρ > 1). Verifica los valores ingresados.\");\r\n      return;\r\n    }\r\n    let sumatoria = 0;\r\n    for (let n = 0; n < servidoresNum-1; n++) {\r\n      sumatoria += (Math.pow(lambdaNum / muNum, n) / calcularFactorial(n))+(Math.pow(lambdaNum / muNum, servidoresNum) / (calcularFactorial(servidoresNum)) *(1-rho));\r\n    }\r\n    const P0 = 1 / (sumatoria);\r\n\r\n    const Ls = (lambdaNum / muNum) + (Math.pow(lambdaNum, servidoresNum) * P0) / (calcularFactorial(servidoresNum) * Math.pow(servidoresNum * (1 - rho), 2));\r\n    const Lq = Ls - (lambdaNum / muNum);\r\n    const Ws = Ls / lambdaNum;\r\n    const Wq = Lq / lambdaNum;\r\n\r\n    setResultado({ P0: P0 * 100, Ls, Lq, Ws, Wq });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo M/G/s (sin espera)</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Número de servidores (s):\r\n          <input\r\n            type=\"number\"\r\n            value={servidores}\r\n            onChange={(e) => setServidores(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularResultados} style={{ display: 'block', margin: '20px auto' }}>\r\n        Calcular\r\n      </button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Parámetro\r\n                </th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>\r\n                  Valor\r\n                </th>\r\n              </tr>\r\n              {resultado.P0 !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>P₀ (Probabilidad de sistema vacío)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.P0.toFixed(2)}%\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {resultado.Prej !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>P_rej (Probabilidad de rechazo)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.Prej.toFixed(2)}%\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {resultado.Ls !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ls (Clientes promedio en sistema)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.Ls.toFixed(2)} clientes\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {resultado.Lq !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (Clientes promedio en cola)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.Lq.toFixed(2)} clientes\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {resultado.Ws !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ws (Tiempo promedio en sistema)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.Ws.toFixed(2)} unidades de tiempo\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {resultado.Wq !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en cola)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>\r\n                    {resultado.Wq.toFixed(2)} unidades de tiempo\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiplesServidoresSinEspera;\r\n","import React, { useState } from 'react';\r\n\r\nfunction FuentesFinitas() {\r\n  const [N, setN] = useState(''); // Número total de fuentes\r\n  const [lambda, setLambda] = useState(''); // Tasa de llegada inicial\r\n  const [mu, setMu] = useState(''); // Tasa de servicio\r\n  const [servidores, setServidores] = useState(''); // Número de servidores\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const calcularFactorial = (n) => {\r\n    if (n < 0) {\r\n      throw new Error(\"El factorial no está definido para números negativos.\");\r\n    }\r\n    let resultado = 1;\r\n    for (let i = 1; i <= n; i++) {\r\n      resultado *= i;\r\n    }\r\n    return resultado;\r\n  };\r\n\r\n  const calcularResultados = () => {\r\n    const Nnum = parseInt(N);\r\n    const lambdaNum = parseFloat(lambda);\r\n    const muNum = parseFloat(mu);\r\n    const servidoresNum = parseInt(servidores);\r\n\r\n    if (!Nnum || !lambdaNum || !muNum || !servidoresNum || Nnum <= 0 || servidoresNum <= 0) {\r\n      alert(\"Por favor, ingresa valores válidos para N, λ, μ y número de servidores.\");\r\n      return;\r\n    }\r\n\r\n    const lambdaEfectiva = lambdaNum * (Nnum - 1) / Nnum;\r\n    const rho = lambdaEfectiva / (servidoresNum * muNum);\r\n\r\n    let sumatoria = 0;\r\n    for (let n = 0; n <= servidoresNum; n++) {\r\n      sumatoria += (Math.pow(lambdaEfectiva / muNum, n) / calcularFactorial(n));\r\n    }\r\n    const P0 = 1 / sumatoria;\r\n\r\n    const Ls = lambdaEfectiva / muNum + \r\n               (Math.pow(lambdaEfectiva / muNum, servidoresNum) * P0) /\r\n               (calcularFactorial(servidoresNum) * Math.pow(servidoresNum * (1 - rho), 2));\r\n\r\n    const Lq = Ls - (lambdaEfectiva / muNum);\r\n    const Ws = Ls / lambdaEfectiva;\r\n    const Wq = Lq / lambdaEfectiva;\r\n\r\n    setResultado({ lambdaEfectiva, P0: P0 * 100, Ls, Lq, Ws, Wq });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Modelo de Línea de Espera con Fuentes Finitas</h2>\r\n      <div style={{ display: 'inline-block', textAlign: 'left', marginBottom: '20px' }}>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Número total de fuentes (N):\r\n          <input\r\n            type=\"number\"\r\n            value={N}\r\n            onChange={(e) => setN(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de llegada (λ):\r\n          <input\r\n            type=\"number\"\r\n            value={lambda}\r\n            onChange={(e) => setLambda(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Tasa de servicio (μ):\r\n          <input\r\n            type=\"number\"\r\n            value={mu}\r\n            onChange={(e) => setMu(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n        <label style={{ display: 'block', marginBottom: '10px' }}>\r\n          Número de servidores (s):\r\n          <input\r\n            type=\"number\"\r\n            value={servidores}\r\n            onChange={(e) => setServidores(e.target.value)}\r\n            style={{ width: '100px', marginLeft: '10px' }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={calcularResultados} style={{ display: 'block', margin: '20px auto' }}>\r\n        Calcular\r\n      </button>\r\n      {resultado && (\r\n        <div>\r\n          <h3>Resultados</h3>\r\n          <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n            <tbody>\r\n              <tr>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>Parámetro</th>\r\n                <th style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'left' }}>Valor</th>\r\n              </tr>\r\n              {resultado.lambdaEfectiva !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>λe (Tasa efectiva de llegada)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.lambdaEfectiva.toFixed(2)}</td>\r\n                </tr>\r\n              )}\r\n              {resultado.P0 !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>P₀ (Probabilidad de sistema vacío)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.P0.toFixed(2)}%</td>\r\n                </tr>\r\n              )}\r\n              {resultado.Ls !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ls (Clientes promedio en sistema)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Ls.toFixed(2)} clientes</td>\r\n                </tr>\r\n              )}\r\n              {resultado.Lq !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Lq (Clientes promedio en cola)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Lq.toFixed(2)} clientes</td>\r\n                </tr>\r\n              )}\r\n              {resultado.Ws !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Ws (Tiempo promedio en sistema)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Ws.toFixed(2)} horas</td>\r\n                </tr>\r\n              )}\r\n              {resultado.Wq !== undefined && (\r\n                <tr>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>Wq (Tiempo promedio en cola)</td>\r\n                  <td style={{ border: '1px solid #ccc', padding: '8px' }}>{resultado.Wq.toFixed(2)} horas</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FuentesFinitas;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ProgramacionCuadratica = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [numRestricciones, setNumRestricciones] = useState(2);\r\n  const [formularioGenerado, setFormularioGenerado] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const generarFormulario = () => {\r\n    const formularioHTML = [];\r\n\r\n    // Función objetivo\r\n    formularioHTML.push(\r\n      <div key=\"objetivo\">\r\n        <h2>Función Objetivo</h2>\r\n        {[...Array(numVariables)].map((_, i) => (\r\n          <div key={`var${i + 1}`}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder={`Coeficiente lineal de x${i + 1}`}\r\n              name={`coefLinearVar${i + 1}`}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder={`Coeficiente cuadrático de x${i + 1}^2`}\r\n              name={`coefCuadVar${i + 1}`}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <h3>Términos de interacción:</h3>\r\n        {[...Array(numVariables)].map((_, i) =>\r\n          [...Array(numVariables)].map((_, j) =>\r\n            i < j ? (\r\n              <input\r\n                key={`coefInterVar${i + 1}${j + 1}`}\r\n                type=\"number\"\r\n                placeholder={`Coef x${i + 1}x${j + 1}`}\r\n                name={`coefInterVar${i + 1}${j + 1}`}\r\n                required\r\n              />\r\n            ) : null\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    // Restricciones\r\n    formularioHTML.push(\r\n      <div key=\"restricciones\">\r\n        <h2>Restricciones</h2>\r\n        {[...Array(numRestricciones)].map((_, j) => (\r\n          <div key={`restriccion${j + 1}`}>\r\n            <h3>Restricción {j + 1}</h3>\r\n            <h4>Lado Izquierdo:</h4>\r\n            {[...Array(numVariables)].map((_, i) => (\r\n              <input\r\n                key={`coefRestIzq${j + 1}Var${i + 1}`}\r\n                type=\"number\"\r\n                placeholder={`Coef Variable x${i + 1}`}\r\n                name={`coefRestIzq${j + 1}Var${i + 1}`}\r\n                required\r\n              />\r\n            ))}\r\n            <select name={`simboloRest${j + 1}`} key={`simboloRest${j + 1}`}>\r\n              <option value=\"<=\">&le;</option>\r\n              <option value=\">=\">&ge;</option>\r\n              <option value=\"=\">=</option>\r\n            </select>\r\n            <input\r\n              key={`montoRestDer${j + 1}`}\r\n              type=\"number\"\r\n              placeholder=\"Límite\"\r\n              name={`montoRestDer${j + 1}`}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    setFormularioGenerado(formularioHTML);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const coefLineales = [];\r\n    const coefCuadraticos = [];\r\n    const coefInteracciones = Array(numVariables)\r\n      .fill(null)\r\n      .map(() => Array(numVariables).fill(0));\r\n    const restricciones = [];\r\n\r\n    // Obtener coeficientes lineales y cuadráticos\r\n    for (let i = 1; i <= numVariables; i++) {\r\n      coefLineales.push(parseFloat(event.target[`coefLinearVar${i}`].value));\r\n      coefCuadraticos.push(parseFloat(event.target[`coefCuadVar${i}`].value));\r\n    }\r\n\r\n    // Obtener coeficientes de interacción\r\n    for (let i = 1; i <= numVariables; i++) {\r\n      for (let j = i + 1; j <= numVariables; j++) {\r\n        coefInteracciones[i - 1][j - 1] = parseFloat(\r\n          event.target[`coefInterVar${i}${j}`]?.value || 0\r\n        );\r\n        coefInteracciones[j - 1][i - 1] =\r\n          coefInteracciones[i - 1][j - 1]; // Simetría\r\n      }\r\n    }\r\n\r\n    // Obtener restricciones\r\n    for (let j = 1; j <= numRestricciones; j++) {\r\n      const restriccion = {\r\n        coeficientes: [],\r\n        simbolo: event.target[`simboloRest${j}`].value,\r\n        limite: parseFloat(event.target[`montoRestDer${j}`].value),\r\n      };\r\n\r\n      for (let i = 1; i <= numVariables; i++) {\r\n        restriccion.coeficientes.push(\r\n          parseFloat(event.target[`coefRestIzq${j}Var${i}`].value)\r\n        );\r\n      }\r\n\r\n      restricciones.push(restriccion);\r\n    }\r\n\r\n    const resultado = resolverOptimizacion(\r\n      coefLineales,\r\n      coefCuadraticos,\r\n      coefInteracciones,\r\n      restricciones\r\n    );\r\n    setResultado(resultado);\r\n  };\r\n\r\n  const resolverOptimizacion = (\r\n    coefLineales,\r\n    coefCuadraticos,\r\n    coefInteracciones,\r\n    restricciones\r\n  ) => {\r\n    let mejorValor = -Infinity;\r\n    let mejorSolucion = {};\r\n\r\n    for (let x1 = 0; x1 <= 100; x1++) {\r\n      for (let x2 = 0; x2 <= 100; x2++) {\r\n        const valores = [x1, x2];\r\n\r\n        // Calcular valor objetivo\r\n        let valorObjetivo =\r\n          coefLineales[0] * x1 +\r\n          coefLineales[1] * x2 +\r\n          coefCuadraticos[0] * x1 ** 2 +\r\n          coefCuadraticos[1] * x2 ** 2 +\r\n          coefInteracciones[0][1] * x1 * x2;\r\n\r\n        // Verificar restricciones\r\n        let factible = true;\r\n        for (let restriccion of restricciones) {\r\n          const valorRestriccion = restriccion.coeficientes.reduce(\r\n            (acc, coef, i) => acc + coef * valores[i],\r\n            0\r\n          );\r\n\r\n          switch (restriccion.simbolo) {\r\n            case \"<=\":\r\n              if (valorRestriccion > restriccion.limite) factible = false;\r\n              break;\r\n            case \">=\":\r\n              if (valorRestriccion < restriccion.limite) factible = false;\r\n              break;\r\n            case \"=\":\r\n              if (valorRestriccion !== restriccion.limite) factible = false;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          if (!factible) break;\r\n        }\r\n\r\n        if (factible && valorObjetivo > mejorValor) {\r\n          mejorValor = valorObjetivo;\r\n          mejorSolucion = { x1, x2 };\r\n        }\r\n      }\r\n    }\r\n\r\n    return { mejorValor, mejorSolucion };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Programación Cuadrática</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>\r\n            Variables:\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={numVariables}\r\n              onChange={(e) => setNumVariables(parseInt(e.target.value))}\r\n            />\r\n          </label>\r\n          <label>\r\n            Restricciones:\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={numRestricciones}\r\n              onChange={(e) => setNumRestricciones(parseInt(e.target.value))}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"button\" onClick={generarFormulario}>\r\n          Generar Formulario\r\n        </button>\r\n        {formularioGenerado}\r\n        {formularioGenerado.length > 0 && <button type=\"submit\">Calcular</button>}\r\n      </form>\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          <p>Valor óptimo: {resultado.mejorValor}</p>\r\n          <p>Solución óptima: {JSON.stringify(resultado.mejorSolucion)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionCuadratica;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProgramacionSeparable = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [coeficientes, setCoeficientes] = useState([]);\r\n  const [restricciones, setRestricciones] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const generarFormulario = () => {\r\n    const nuevosCoeficientes = Array.from({ length: numVariables }, (_, i) => ({\r\n      variable: `x${i + 1}`,\r\n      cuadratico: 0,\r\n      lineal: 0,\r\n    }));\r\n\r\n    const nuevasRestricciones = [\r\n      {\r\n        coeficientes: Array(numVariables).fill(0),\r\n        limite: 0,\r\n        tipo: '<=',\r\n      },\r\n    ];\r\n\r\n    setCoeficientes(nuevosCoeficientes);\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const actualizarCoeficiente = (index, campo, value) => {\r\n    const nuevosCoeficientes = [...coeficientes];\r\n    nuevosCoeficientes[index][campo] = parseFloat(value) || 0;\r\n    setCoeficientes(nuevosCoeficientes);\r\n  };\r\n\r\n  const actualizarRestriccion = (index, campo, value) => {\r\n    const nuevasRestricciones = [...restricciones];\r\n    if (campo === 'coeficientes') {\r\n      nuevasRestricciones[index].coeficientes = value.map((v) => parseFloat(v) || 0);\r\n    } else {\r\n      nuevasRestricciones[index][campo] = parseFloat(value) || 0;\r\n    }\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const resolver = () => {\r\n    try {\r\n      const soluciones = coeficientes.map(({ cuadratico, lineal }, index) => {\r\n        let xOpt = 0;\r\n  \r\n        if (cuadratico !== 0) {\r\n          xOpt = -lineal / (2 * cuadratico); // Cálculo estándar para términos cuadráticos\r\n        } else if (lineal < 0) {\r\n          xOpt = 100; // Si no hay término cuadrático y lineal es negativo, maximiza x\r\n        } else {\r\n          xOpt = 0; // Si lineal es positivo o 0, minimiza x\r\n        }\r\n  \r\n        // Aplicar restricciones al valor de xOpt\r\n        restricciones.forEach(({ coeficientes, limite, tipo }) => {\r\n          const coef = coeficientes[index];\r\n          if (coef !== 0) {\r\n            const valorRestriccion = limite / coef;\r\n            if (tipo === '<=') {\r\n              xOpt = Math.min(xOpt, valorRestriccion);\r\n            } else if (tipo === '>=') {\r\n              xOpt = Math.max(xOpt, valorRestriccion);\r\n            }\r\n          }\r\n        });\r\n  \r\n        xOpt = Math.max(0, xOpt); // Asegurarse de que xOpt no sea negativo\r\n  \r\n        return {\r\n          variable: `x${index + 1}`,\r\n          valor: xOpt,\r\n          resultado: cuadratico * xOpt ** 2 + lineal * xOpt,\r\n        };\r\n      });\r\n  \r\n      const restriccionesValidas = restricciones.every(({ coeficientes, limite, tipo }) => {\r\n        const valorRestriccion = coeficientes.reduce(\r\n          (acc, coef, index) => acc + coef * soluciones[index].valor,\r\n          0\r\n        );\r\n        switch (tipo) {\r\n          case '<=':\r\n            return valorRestriccion <= limite;\r\n          case '>=':\r\n            return valorRestriccion >= limite;\r\n          case '=':\r\n            return Math.abs(valorRestriccion - limite) < 1e-6;\r\n          default:\r\n            return false;\r\n        }\r\n      });\r\n  \r\n      if (restriccionesValidas) {\r\n        setResultado({\r\n          soluciones,\r\n          resultadoTotal: soluciones.reduce((acc, s) => acc + s.resultado, 0),\r\n        });\r\n      } else {\r\n        alert('Las restricciones no se cumplen.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error durante la resolución:', error);\r\n      alert('Ocurrió un error al resolver el problema.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Modelo de Programación Separable</h1>\r\n      <label>\r\n        Número de variables:\r\n        <input\r\n          type=\"number\"\r\n          value={numVariables}\r\n          onChange={(e) => setNumVariables(Number(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={generarFormulario}>Generar formulario</button>\r\n\r\n      {coeficientes.length > 0 && (\r\n        <div>\r\n          <h2>Coeficientes</h2>\r\n          {coeficientes.map(({ variable, cuadratico, lineal }, index) => (\r\n            <div key={index}>\r\n              <label>\r\n                {variable}²:\r\n                <input\r\n                  type=\"number\"\r\n                  value={cuadratico}\r\n                  onChange={(e) => actualizarCoeficiente(index, 'cuadratico', e.target.value)}\r\n                />\r\n              </label>\r\n              <label>\r\n                {variable}:\r\n                <input\r\n                  type=\"number\"\r\n                  value={lineal}\r\n                  onChange={(e) => actualizarCoeficiente(index, 'lineal', e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {restricciones.length > 0 && (\r\n        <div>\r\n          <h2>Restricciones</h2>\r\n          {restricciones.map((restriccion, index) => (\r\n            <div key={index}>\r\n              <label>\r\n                Restricción {index + 1}:\r\n                {coeficientes.map((_, i) => (\r\n                  <input\r\n                    key={`restriccion-${index}-${i}`}\r\n                    type=\"number\"\r\n                    placeholder={`Coef x${i + 1}`}\r\n                    onChange={(e) => {\r\n                      const nuevosCoef = [...restriccion.coeficientes];\r\n                      nuevosCoef[i] = Number(e.target.value);\r\n                      actualizarRestriccion(index, 'coeficientes', nuevosCoef);\r\n                    }}\r\n                  />\r\n                ))}\r\n              </label>\r\n              <select\r\n                value={restriccion.tipo}\r\n                onChange={(e) => actualizarRestriccion(index, 'tipo', e.target.value)}\r\n              >\r\n                <option value=\"<=\">&le;</option>\r\n                <option value=\">=\">&ge;</option>\r\n                <option value=\"=\">=</option>\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Límite\"\r\n                onChange={(e) => actualizarRestriccion(index, 'limite', Number(e.target.value))}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={resolver}>Resolver</button>\r\n\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultados</h2>\r\n          {resultado.soluciones.map(({ variable, valor, resultado }) => (\r\n            <p key={variable}>\r\n              {variable}: {valor.toFixed(2)} (f = {resultado.toFixed(2)})\r\n            </p>\r\n          ))}\r\n          <p>Total: {resultado.resultadoTotal.toFixed(2)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionSeparable;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProgramacionNoConvexa = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [coeficientes, setCoeficientes] = useState([]);\r\n  const [restricciones, setRestricciones] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  // Generar formulario\r\n  const generarFormulario = () => {\r\n    setCoeficientes(\r\n      Array.from({ length: numVariables }, (_, i) => ({\r\n        variable: `x${i + 1}`,\r\n        cubico: 0,\r\n        cuadratico: 0,\r\n        lineal: 0,\r\n      }))\r\n    );\r\n    setRestricciones([\r\n      {\r\n        coeficientes: Array(numVariables).fill(0),\r\n        limite: 0,\r\n        tipo: '<=',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Actualizar coeficientes\r\n  const actualizarCoeficiente = (index, campo, value) => {\r\n    const nuevosCoeficientes = [...coeficientes];\r\n    nuevosCoeficientes[index][campo] = parseFloat(value) || 0;\r\n    setCoeficientes(nuevosCoeficientes);\r\n  };\r\n\r\n  // Actualizar restricciones\r\n  const actualizarRestriccion = (index, campo, value, subIndex = null) => {\r\n    const nuevasRestricciones = [...restricciones];\r\n    if (campo === 'coeficientes' && subIndex !== null) {\r\n      nuevasRestricciones[index].coeficientes[subIndex] = parseFloat(value) || 0;\r\n    } else {\r\n      nuevasRestricciones[index][campo] = campo === 'tipo' ? value : parseFloat(value) || 0;\r\n    }\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  // Agregar restricción\r\n  const agregarRestriccion = () => {\r\n    setRestricciones([\r\n      ...restricciones,\r\n      {\r\n        coeficientes: Array(numVariables).fill(0),\r\n        limite: 0,\r\n        tipo: '<=',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Resolver programación no convexa\r\n  const resolver = () => {\r\n    try {\r\n      const soluciones = coeficientes.map(({ cubico, cuadratico, lineal }, index) => {\r\n        let xOpt = 0;\r\n        if (cubico !== 0) {\r\n          xOpt = -lineal / (3 * cubico);\r\n        } else if (cuadratico !== 0) {\r\n          xOpt = -lineal / (2 * cuadratico);\r\n        } else {\r\n          xOpt = lineal < 0 ? 100 : 0;\r\n        }\r\n        xOpt = Math.max(0, Math.min(100, xOpt));\r\n        const resultado = cubico * xOpt ** 3 + cuadratico * xOpt ** 2 + lineal * xOpt;\r\n        return { variable: `x${index + 1}`, valor: xOpt, resultado };\r\n      });\r\n\r\n      const restriccionesCumplidas = restricciones.every(({ coeficientes, limite, tipo }) => {\r\n        const valorRestriccion = coeficientes.reduce((sum, coef, i) => sum + coef * soluciones[i].valor, 0);\r\n        switch (tipo) {\r\n          case '<=':\r\n            return valorRestriccion <= limite;\r\n          case '>=':\r\n            return valorRestriccion >= limite;\r\n          case '=':\r\n            return Math.abs(valorRestriccion - limite) < 1e-6;\r\n          default:\r\n            return false;\r\n        }\r\n      });\r\n\r\n      if (restriccionesCumplidas) {\r\n        const resultadoTotal = soluciones.reduce((sum, sol) => sum + sol.resultado, 0);\r\n        setResultado({ soluciones, resultadoTotal });\r\n      } else {\r\n        alert('Las soluciones no cumplen con las restricciones.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al resolver:\", error);\r\n      alert('Error en la resolución. Revisa los datos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', textAlign: 'center' }}>\r\n      <h1>Programación No Convexa</h1>\r\n      <label>\r\n        Número de variables:\r\n        <input\r\n          type=\"number\"\r\n          min=\"1\"\r\n          value={numVariables}\r\n          onChange={(e) => setNumVariables(parseInt(e.target.value))}\r\n        />\r\n      </label>\r\n      <button onClick={generarFormulario}>Generar Formulario</button>\r\n\r\n      {coeficientes.length > 0 && (\r\n        <div>\r\n          <h2>Coeficientes</h2>\r\n          {coeficientes.map(({ variable, cubico, cuadratico, lineal }, index) => (\r\n            <div key={index}>\r\n              <label>{variable}³:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={cubico}\r\n                onChange={(e) => actualizarCoeficiente(index, 'cubico', e.target.value)}\r\n              />\r\n              <label>{variable}²:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={cuadratico}\r\n                onChange={(e) => actualizarCoeficiente(index, 'cuadratico', e.target.value)}\r\n              />\r\n              <label>{variable}:</label>\r\n              <input\r\n                type=\"number\"\r\n                value={lineal}\r\n                onChange={(e) => actualizarCoeficiente(index, 'lineal', e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {restricciones.length > 0 && (\r\n        <div>\r\n          <h2>Restricciones</h2>\r\n          {restricciones.map((restriccion, index) => (\r\n            <div key={index}>\r\n              {restriccion.coeficientes.map((coef, subIndex) => (\r\n                <input\r\n                  key={subIndex}\r\n                  type=\"number\"\r\n                  placeholder={`Coef x${subIndex + 1}`}\r\n                  value={coef}\r\n                  onChange={(e) =>\r\n                    actualizarRestriccion(index, 'coeficientes', e.target.value, subIndex)\r\n                  }\r\n                />\r\n              ))}\r\n              <select\r\n                value={restriccion.tipo}\r\n                onChange={(e) => actualizarRestriccion(index, 'tipo', e.target.value)}\r\n              >\r\n                <option value=\"<=\">≤</option>\r\n                <option value=\">=\">≥</option>\r\n                <option value=\"=\">=</option>\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Límite\"\r\n                value={restriccion.limite}\r\n                onChange={(e) => actualizarRestriccion(index, 'limite', e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n          <button onClick={agregarRestriccion}>Agregar Restricción</button>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={resolver}>Resolver</button>\r\n\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          {resultado.soluciones.map(({ variable, valor, resultado }) => (\r\n            <p key={variable}>\r\n              {variable} = {valor.toFixed(2)} (f({variable}) = {resultado.toFixed(2)})\r\n            </p>\r\n          ))}\r\n          <h3>Total: {resultado.resultadoTotal.toFixed(2)}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionNoConvexa;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProgramacionConvexa = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [coeficientesObjetivo, setCoeficientesObjetivo] = useState([]);\r\n  const [restricciones, setRestricciones] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const inicializarFormulario = () => {\r\n    const nuevosCoeficientes = Array(numVariables).fill(0).map(() => ({\r\n      cuadratico: 1,\r\n      lineal: 0,\r\n    }));\r\n    setCoeficientesObjetivo(nuevosCoeficientes);\r\n\r\n    const nuevasRestricciones = Array.from({ length: 2 }, () => ({\r\n      coeficientes: Array(numVariables).fill(1),\r\n      limite: 10,\r\n      tipo: '≤',\r\n    }));\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const actualizarObjetivo = (index, campo, valor) => {\r\n    const nuevosCoeficientes = [...coeficientesObjetivo];\r\n    nuevosCoeficientes[index][campo] = parseFloat(valor) || 0;\r\n    setCoeficientesObjetivo(nuevosCoeficientes);\r\n  };\r\n\r\n  const actualizarRestriccion = (index, campo, valor, coefIndex) => {\r\n    const nuevasRestricciones = [...restricciones];\r\n    if (campo === 'coeficientes') {\r\n      nuevasRestricciones[index].coeficientes[coefIndex] = parseFloat(valor) || 0;\r\n    } else if (campo === 'tipo') {\r\n      nuevasRestricciones[index].tipo = valor;\r\n    } else {\r\n      nuevasRestricciones[index].limite = parseFloat(valor) || 0;\r\n    }\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const gradienteProyectado = (variablesIniciales, iteraciones = 1000, tasaAprendizaje = 0.01) => {\r\n    let variables = [...variablesIniciales];\r\n\r\n    for (let iter = 0; iter < iteraciones; iter++) {\r\n      const gradiente = variables.map((_, i) => {\r\n        const { cuadratico, lineal } = coeficientesObjetivo[i];\r\n        return 2 * cuadratico * variables[i] + lineal;\r\n      });\r\n\r\n      let nuevasVariables = variables.map((v, i) => v - tasaAprendizaje * gradiente[i]);\r\n\r\n      nuevasVariables = proyectarRestricciones(nuevasVariables);\r\n\r\n      if (norma(gradiente) < 1e-6) break;\r\n\r\n      variables = [...nuevasVariables];\r\n    }\r\n\r\n    return variables;\r\n  };\r\n\r\n  const proyectarRestricciones = (variables) => {\r\n    return restricciones.reduce((vars, { coeficientes, limite, tipo }) => {\r\n      const valorRestriccion = coeficientes.reduce((sum, coef, i) => sum + coef * vars[i], 0);\r\n      if (tipo === '≤' && valorRestriccion > limite) {\r\n        const factor = limite / valorRestriccion;\r\n        return vars.map((v) => v * factor);\r\n      }\r\n      return vars;\r\n    }, variables);\r\n  };\r\n\r\n  const norma = (vector) => Math.sqrt(vector.reduce((sum, v) => sum + v ** 2, 0));\r\n\r\n  const calcularObjetivo = (variables) =>\r\n    variables.reduce(\r\n      (sum, x, i) =>\r\n        sum +\r\n        coeficientesObjetivo[i].cuadratico * x ** 2 +\r\n        coeficientesObjetivo[i].lineal * x,\r\n      0\r\n    );\r\n\r\n  const resolver = () => {\r\n    const variablesIniciales = Array(numVariables).fill(1);\r\n    const solucion = gradienteProyectado(variablesIniciales);\r\n    const valorObjetivo = calcularObjetivo(solucion);\r\n    setResultado({ variables: solucion, objetivo: valorObjetivo });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Programación Convexa Optimizada</h1>\r\n\r\n      <label>Número de variables:</label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"2\"\r\n        value={numVariables}\r\n        onChange={(e) => setNumVariables(parseInt(e.target.value, 10) || 2)}\r\n      />\r\n      <button onClick={inicializarFormulario}>Inicializar Formulario</button>\r\n\r\n      {coeficientesObjetivo.length > 0 && (\r\n        <div>\r\n          <h2>Función Objetivo</h2>\r\n          {coeficientesObjetivo.map(({ cuadratico, lineal }, index) => (\r\n            <div key={`obj-${index}`}>\r\n              <label>\r\n                Coef. Cuadrático (x{index + 1}²):\r\n                <input\r\n                  type=\"number\"\r\n                  value={cuadratico}\r\n                  onChange={(e) => actualizarObjetivo(index, 'cuadratico', e.target.value)}\r\n                />\r\n              </label>\r\n              <label>\r\n                Coef. Lineal (x{index + 1}):\r\n                <input\r\n                  type=\"number\"\r\n                  value={lineal}\r\n                  onChange={(e) => actualizarObjetivo(index, 'lineal', e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {restricciones.length > 0 && (\r\n        <div>\r\n          <h2>Restricciones</h2>\r\n          {restricciones.map((restriccion, index) => (\r\n            <div key={`res-${index}`}>\r\n              {restriccion.coeficientes.map((coef, coefIndex) => (\r\n                <input\r\n                  key={`coef-${index}-${coefIndex}`}\r\n                  type=\"number\"\r\n                  placeholder={`Coef x${coefIndex + 1}`}\r\n                  value={coef}\r\n                  onChange={(e) =>\r\n                    actualizarRestriccion(index, 'coeficientes', e.target.value, coefIndex)\r\n                  }\r\n                />\r\n              ))}\r\n              <select\r\n                value={restriccion.tipo}\r\n                onChange={(e) => actualizarRestriccion(index, 'tipo', e.target.value)}\r\n              >\r\n                <option value=\"≤\">≤</option>\r\n                <option value=\"≥\">≥</option>\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Límite\"\r\n                value={restriccion.limite}\r\n                onChange={(e) => actualizarRestriccion(index, 'limite', e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={resolver}>Resolver</button>\r\n\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          {resultado.variables.map((val, i) => (\r\n            <p key={`res-${i}`}>x{i + 1} = {val.toFixed(4)}</p>\r\n          ))}\r\n          <p>Valor Óptimo: {resultado.objetivo.toFixed(4)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionConvexa;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProgramacionFraccionaria = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [coeficientesNumerador, setCoeficientesNumerador] = useState([]);\r\n  const [coeficientesDenominador, setCoeficientesDenominador] = useState([]);\r\n  const [restricciones, setRestricciones] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const inicializarFormulario = () => {\r\n    const nuevosNumerador = Array(numVariables).fill(0);\r\n    const nuevosDenominador = Array(numVariables).fill(0);\r\n    setCoeficientesNumerador(nuevosNumerador);\r\n    setCoeficientesDenominador(nuevosDenominador);\r\n\r\n    const nuevasRestricciones = Array.from({ length: 2 }, () => ({\r\n      coeficientes: Array(numVariables).fill(0),\r\n      limite: 0,\r\n      tipo: '≤', // Tipo por defecto: menor o igual\r\n    }));\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const actualizarCoeficiente = (tipo, index, valor) => {\r\n    const coeficientes = tipo === 'numerador' ? [...coeficientesNumerador] : [...coeficientesDenominador];\r\n    coeficientes[index] = parseFloat(valor) || 0;\r\n    tipo === 'numerador' ? setCoeficientesNumerador(coeficientes) : setCoeficientesDenominador(coeficientes);\r\n  };\r\n\r\n  const actualizarRestriccion = (index, campo, valor) => {\r\n    const nuevasRestricciones = [...restricciones];\r\n    if (campo === 'coeficientes') {\r\n      nuevasRestricciones[index].coeficientes = valor.map((v) => parseFloat(v) || 0);\r\n    } else if (campo === 'tipo') {\r\n      nuevasRestricciones[index][campo] = valor;\r\n    } else {\r\n      nuevasRestricciones[index][campo] = parseFloat(valor) || 0;\r\n    }\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const resolver = () => {\r\n    try {\r\n      let mejorSolucion = { valores: [], resultado: Infinity };\r\n\r\n      for (let x1 = 0.1; x1 <= 10; x1 += 0.1) {\r\n        for (let x2 = 0.1; x2 <= 10; x2 += 0.1) {\r\n          const variables = [x1, x2];\r\n          const valorNumerador = coeficientesNumerador.reduce((sum, coef, i) => sum + coef * variables[i], 0);\r\n          const valorDenominador = coeficientesDenominador.reduce((sum, coef, i) => sum + coef * variables[i], 0);\r\n\r\n          if (valorDenominador === 0) continue;\r\n\r\n          const valorObjetivo = valorNumerador / valorDenominador;\r\n\r\n          const cumpleRestricciones = restricciones.every(({ coeficientes, limite, tipo }) => {\r\n            const valor = coeficientes.reduce((sum, coef, i) => sum + coef * variables[i], 0);\r\n            if (tipo === '≤') return valor <= limite;\r\n            if (tipo === '≥') return valor >= limite;\r\n            return valor === limite;\r\n          });\r\n\r\n          if (cumpleRestricciones && valorObjetivo < mejorSolucion.resultado) {\r\n            mejorSolucion = { valores: [x1, x2], resultado: valorObjetivo };\r\n          }\r\n        }\r\n      }\r\n\r\n      setResultado(mejorSolucion);\r\n    } catch (error) {\r\n      console.error(\"Error al resolver:\", error);\r\n      alert(\"Revisa los datos ingresados.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Programación Fraccionaria</h1>\r\n\r\n      <label>Número de variables:</label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"2\"\r\n        value={numVariables}\r\n        onChange={(e) => setNumVariables(parseInt(e.target.value, 10) || 2)}\r\n      />\r\n      <button onClick={inicializarFormulario}>Inicializar Formulario</button>\r\n\r\n      {coeficientesNumerador.length > 0 && (\r\n        <div>\r\n          <h2>Función Objetivo</h2>\r\n          <h3>Numerador:</h3>\r\n          {coeficientesNumerador.map((_, index) => (\r\n            <input\r\n              key={`num-${index}`}\r\n              type=\"number\"\r\n              placeholder={`Coef x${index + 1}`}\r\n              onChange={(e) => actualizarCoeficiente('numerador', index, e.target.value)}\r\n            />\r\n          ))}\r\n\r\n          <h3>Denominador:</h3>\r\n          {coeficientesDenominador.map((_, index) => (\r\n            <input\r\n              key={`den-${index}`}\r\n              type=\"number\"\r\n              placeholder={`Coef x${index + 1}`}\r\n              onChange={(e) => actualizarCoeficiente('denominador', index, e.target.value)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {restricciones.length > 0 && (\r\n        <div>\r\n          <h2>Restricciones</h2>\r\n          {restricciones.map((restriccion, index) => (\r\n            <div key={`res-${index}`}>\r\n              <label>Restricción {index + 1}:</label>\r\n              {restriccion.coeficientes.map((_, i) => (\r\n                <input\r\n                  key={`coef-${index}-${i}`}\r\n                  type=\"number\"\r\n                  placeholder={`Coef x${i + 1}`}\r\n                  onChange={(e) => {\r\n                    const nuevosCoef = [...restriccion.coeficientes];\r\n                    nuevosCoef[i] = e.target.value;\r\n                    actualizarRestriccion(index, 'coeficientes', nuevosCoef);\r\n                  }}\r\n                />\r\n              ))}\r\n\r\n              <select\r\n                value={restriccion.tipo}\r\n                onChange={(e) => actualizarRestriccion(index, 'tipo', e.target.value)}\r\n              >\r\n                <option value=\"≤\">≤</option>\r\n                <option value=\"≥\">≥</option>\r\n                <option value=\"=\">=</option>\r\n              </select>\r\n\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Límite\"\r\n                onChange={(e) => actualizarRestriccion(index, 'limite', e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={resolver}>Resolver</button>\r\n\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          <p>Solución óptima: x1 = {resultado.valores[0].toFixed(2)}, x2 = {resultado.valores[1].toFixed(2)}</p>\r\n          <p>Valor óptimo: {resultado.resultado.toFixed(4)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionFraccionaria;\r\n","import React, { useState } from 'react';\r\n\r\nconst ProgramacionGeometricaOptimizada = () => {\r\n  const [numVariables, setNumVariables] = useState(2);\r\n  const [coeficientesObjetivo, setCoeficientesObjetivo] = useState([]);\r\n  const [restricciones, setRestricciones] = useState([]);\r\n  const [resultado, setResultado] = useState(null);\r\n\r\n  const inicializarFormulario = () => {\r\n    const nuevosCoeficientes = Array(numVariables).fill(0).map(() => ({\r\n      c: 1,\r\n      exponentes: Array(numVariables).fill(0),\r\n    }));\r\n    setCoeficientesObjetivo(nuevosCoeficientes);\r\n\r\n    const nuevasRestricciones = Array.from({ length: 2 }, () => ({\r\n      coeficientes: Array(numVariables).fill(1),\r\n      exponentes: Array(numVariables).fill(0),\r\n      limite: 1,\r\n      tipo: '≤',\r\n    }));\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const actualizarObjetivo = (index, campo, valor, expIndex) => {\r\n    const nuevosCoeficientes = [...coeficientesObjetivo];\r\n    if (campo === 'c') {\r\n      nuevosCoeficientes[index].c = parseFloat(valor) || 1;\r\n    } else {\r\n      nuevosCoeficientes[index].exponentes[expIndex] = parseFloat(valor) || 0;\r\n    }\r\n    setCoeficientesObjetivo(nuevosCoeficientes);\r\n  };\r\n\r\n  const actualizarRestriccion = (index, campo, valor, expIndex) => {\r\n    const nuevasRestricciones = [...restricciones];\r\n    if (campo === 'coeficientes') {\r\n      nuevasRestricciones[index].coeficientes[expIndex] = parseFloat(valor) || 0;\r\n    } else if (campo === 'exponentes') {\r\n      nuevasRestricciones[index].exponentes[expIndex] = parseFloat(valor) || 0;\r\n    } else if (campo === 'tipo') {\r\n      nuevasRestricciones[index][campo] = valor;\r\n    } else {\r\n      nuevasRestricciones[index][campo] = parseFloat(valor) || 1;\r\n    }\r\n    setRestricciones(nuevasRestricciones);\r\n  };\r\n\r\n  const gradienteDescendente = (variablesIniciales, iteraciones = 1000, tasaAprendizaje = 0.01) => {\r\n    let variables = [...variablesIniciales];\r\n    for (let iter = 0; iter < iteraciones; iter++) {\r\n      const gradientes = variables.map((_, i) => {\r\n        const delta = 0.0001;\r\n        const variablesDelta = [...variables];\r\n        variablesDelta[i] += delta;\r\n\r\n        const f1 = calcularObjetivo(variables);\r\n        const f2 = calcularObjetivo(variablesDelta);\r\n\r\n        return (f2 - f1) / delta;\r\n      });\r\n\r\n      variables = variables.map((v, i) => v - tasaAprendizaje * gradientes[i]);\r\n\r\n      if (restriccionesValidas(variables)) break;\r\n    }\r\n    return variables;\r\n  };\r\n\r\n  const calcularObjetivo = (variables) =>\r\n    coeficientesObjetivo.reduce(\r\n      (prod, { c, exponentes }) =>\r\n        prod *\r\n        c *\r\n        variables.reduce((p, xi, j) => p * Math.pow(xi, exponentes[j]), 1),\r\n      1\r\n    );\r\n\r\n  const restriccionesValidas = (variables) =>\r\n    restricciones.every(({ coeficientes, exponentes, limite, tipo }) => {\r\n      const valor = coeficientes.reduce(\r\n        (prod, coef, i) => prod * coef * Math.pow(variables[i], exponentes[i]),\r\n        1\r\n      );\r\n      if (tipo === '≤') return valor <= limite;\r\n      if (tipo === '≥') return valor >= limite;\r\n      return Math.abs(valor - limite) < 1e-6;\r\n    });\r\n\r\n  const resolver = () => {\r\n    const variablesIniciales = Array(numVariables).fill(1); // Inicialización\r\n    const solucion = gradienteDescendente(variablesIniciales);\r\n    const valorObjetivo = calcularObjetivo(solucion);\r\n    setResultado({ variables: solucion, objetivo: valorObjetivo });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Programación Geométrica Optimizada</h1>\r\n\r\n      <label>Número de variables:</label>\r\n      <input\r\n        type=\"number\"\r\n        min=\"2\"\r\n        value={numVariables}\r\n        onChange={(e) => setNumVariables(parseInt(e.target.value, 10) || 2)}\r\n      />\r\n      <button onClick={inicializarFormulario}>Inicializar Formulario</button>\r\n\r\n      {coeficientesObjetivo.length > 0 && (\r\n        <div>\r\n          <h2>Función Objetivo</h2>\r\n          {coeficientesObjetivo.map(({ c, exponentes }, index) => (\r\n            <div key={`obj-${index}`}>\r\n              <label>\r\n                Coeficiente c:\r\n                <input\r\n                  type=\"number\"\r\n                  value={c}\r\n                  onChange={(e) => actualizarObjetivo(index, 'c', e.target.value)}\r\n                />\r\n              </label>\r\n              {exponentes.map((exp, expIndex) => (\r\n                <label key={`exp-${index}-${expIndex}`}>\r\n                  Exponente x{expIndex + 1}:\r\n                  <input\r\n                    type=\"number\"\r\n                    value={exp}\r\n                    onChange={(e) =>\r\n                      actualizarObjetivo(index, 'exponentes', e.target.value, expIndex)\r\n                    }\r\n                  />\r\n                </label>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {restricciones.length > 0 && (\r\n        <div>\r\n          <h2>Restricciones</h2>\r\n          {restricciones.map((restriccion, index) => (\r\n            <div key={`res-${index}`}>\r\n              {restriccion.coeficientes.map((coef, coefIndex) => (\r\n                <input\r\n                  key={`coef-${index}-${coefIndex}`}\r\n                  type=\"number\"\r\n                  placeholder={`Coef x${coefIndex + 1}`}\r\n                  value={coef}\r\n                  onChange={(e) =>\r\n                    actualizarRestriccion(index, 'coeficientes', e.target.value, coefIndex)\r\n                  }\r\n                />\r\n              ))}\r\n              {restriccion.exponentes.map((exp, expIndex) => (\r\n                <input\r\n                  key={`exp-${index}-${expIndex}`}\r\n                  type=\"number\"\r\n                  placeholder={`Exp x${expIndex + 1}`}\r\n                  value={exp}\r\n                  onChange={(e) =>\r\n                    actualizarRestriccion(index, 'exponentes', e.target.value, expIndex)\r\n                  }\r\n                />\r\n              ))}\r\n              <select\r\n                value={restriccion.tipo}\r\n                onChange={(e) => actualizarRestriccion(index, 'tipo', e.target.value)}\r\n              >\r\n                <option value=\"≤\">≤</option>\r\n                <option value=\"≥\">≥</option>\r\n                <option value=\"=\">=</option>\r\n              </select>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Límite\"\r\n                value={restriccion.limite}\r\n                onChange={(e) => actualizarRestriccion(index, 'limite', e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={resolver}>Resolver</button>\r\n\r\n      {resultado && (\r\n        <div>\r\n          <h2>Resultado</h2>\r\n          {resultado.variables.map((val, i) => (\r\n            <p key={`res-${i}`}>x{i + 1} = {val.toFixed(4)}</p>\r\n          ))}\r\n          <p>Valor Óptimo: {resultado.objetivo.toFixed(4)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramacionGeometricaOptimizada;\r\n","import React, { useState } from 'react';\r\n\r\nconst HolguraPorRechazos = () => {\r\n  const [maxLotSize] = useState(5);\r\n  const [maxRuns] = useState(3);\r\n  const [successProb] = useState(0.5);\r\n  const [fixedCost] = useState(300);\r\n  const [variableCost] = useState(100);\r\n  const [failureCost] = useState(1600);\r\n  const [epsilon] = useState(0.01);\r\n  const [results, setResults] = useState(null);\r\n\r\n  const valueIteration = (states, actions, transitionProb, cost, gamma, epsilon, failureCost) => {\r\n    let V = {};\r\n    let policy = {};\r\n    let iterations = [];\r\n\r\n    states.forEach(s => {\r\n      V[s] = s === 0 ? failureCost : 0;\r\n      policy[s] = actions[0];\r\n    });\r\n\r\n    const calculateBestAction = (s, V) => {\r\n      let minCost = Infinity;\r\n      let bestAction = actions[0];\r\n\r\n      actions.forEach(a => {\r\n        let expectedCost = cost[s][a];\r\n        states.forEach(nextS => {\r\n          expectedCost += gamma * (transitionProb[s][a][nextS] || 0) * V[nextS];\r\n        });\r\n\r\n        if (expectedCost < minCost) {\r\n          minCost = expectedCost;\r\n          bestAction = a;\r\n        }\r\n      });\r\n\r\n      return { minCost, bestAction };\r\n    };\r\n\r\n    while (true) {\r\n      let delta = 0;\r\n      let iterationV = { ...V };\r\n      let iterationPolicy = { ...policy };\r\n\r\n      states.forEach(s => {\r\n        if (s === 0) return;\r\n\r\n        let v = V[s];\r\n        const { minCost, bestAction } = calculateBestAction(s, V);\r\n\r\n        iterationV[s] = minCost;\r\n        iterationPolicy[s] = bestAction;\r\n        delta = Math.max(delta, Math.abs(v - iterationV[s]));\r\n      });\r\n\r\n      iterations.push({ V: { ...iterationV }, policy: { ...iterationPolicy } });\r\n      V = iterationV;\r\n      policy = iterationPolicy;\r\n\r\n      if (delta < epsilon) break;\r\n    }\r\n\r\n    return [policy, V, iterations];\r\n  };\r\n\r\n  const calculateProbabilities = (lotSize, successProb) => {\r\n    const pSuccess = 1 - Math.pow(1 - successProb, lotSize);\r\n    return [pSuccess, 1 - pSuccess];\r\n  };\r\n\r\n  const generateTransitionProb = (states, actions, successProb) => {\r\n    const transitionProb = {};\r\n    states.forEach(s => {\r\n      transitionProb[s] = {};\r\n      actions.forEach(a => {\r\n        const [pSuccess, pFailure] = calculateProbabilities(a, successProb);\r\n        transitionProb[s][a] = {\r\n          [Math.max(0, s - 1)]: pSuccess,\r\n          [s - 1]: pFailure,\r\n        };\r\n      });\r\n    });\r\n    return transitionProb;\r\n  };\r\n\r\n  const generateCost = (states, actions, fixedCost, variableCost) => {\r\n    const cost = {};\r\n    states.forEach(s => {\r\n      cost[s] = {};\r\n      actions.forEach(a => {\r\n        cost[s][a] = fixedCost + variableCost * a;\r\n      });\r\n    });\r\n    return cost;\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    const gamma = 1; // Discount factor\r\n    const states = Array.from({ length: maxRuns + 1 }, (_, i) => maxRuns - i);\r\n    const actions = Array.from({ length: maxLotSize }, (_, i) => i + 1);\r\n    const transitionProb = generateTransitionProb(states, actions, successProb);\r\n    const cost = generateCost(states, actions, fixedCost, variableCost);\r\n\r\n    const [policy, expectedCosts, iterations] = valueIteration(\r\n      states,\r\n      actions,\r\n      transitionProb,\r\n      cost,\r\n      gamma,\r\n      epsilon,\r\n      failureCost\r\n    );\r\n\r\n    setResults({ policy, expectedCosts, iterations });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Programación Dinámica Probabilística</h1>\r\n      <div className=\"form-group\">\r\n        <label>Tamaño máximo del lote:</label>\r\n        <input type=\"number\" value={maxLotSize} readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Máximo de corridas:</label>\r\n        <input type=\"number\" value={maxRuns} readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Probabilidad de éxito por unidad:</label>\r\n        <input type=\"number\" value={successProb} step=\"0.01\" readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Costo fijo por corrida ($):</label>\r\n        <input type=\"number\" value={fixedCost} readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Costo variable por unidad ($):</label>\r\n        <input type=\"number\" value={variableCost} readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Costo por falla ($):</label>\r\n        <input type=\"number\" value={failureCost} readOnly />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Tolerancia:</label>\r\n        <input type=\"number\" value={epsilon} step=\"0.001\" readOnly />\r\n      </div>\r\n      <button onClick={handleCalculate}>Calcular</button>\r\n      {results && (\r\n        <div>\r\n          <h2>Resultados</h2>\r\n          <h3>Resultado Final:</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Corridas</th>\r\n                <th>Tamaño del Lote</th>\r\n                <th>Costo Esperado</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(results.policy).map(([state, action]) => (\r\n                <tr key={state}>\r\n                  <td>{state}</td>\r\n                  <td>{action}</td>\r\n                  <td>${results.expectedCosts[state].toFixed(2)}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HolguraPorRechazos;\r\n","import React, { useState } from 'react';\r\nimport * as math from 'mathjs';\r\n\r\nconst OptimizacionSinRestricciones = () => {\r\n  const [method, setMethod] = useState('');\r\n  const [result, setResult] = useState('');\r\n  \r\n  const [bisectionInputs, setBisectionInputs] = useState({\r\n    func: '',\r\n    a: '',\r\n    b: '',\r\n    tolerance: '',\r\n  });\r\n  \r\n  const [newtonInputs, setNewtonInputs] = useState({\r\n    func: '',\r\n    x0: '',\r\n    tolerance: '',\r\n  });\r\n\r\n  const handleBisectionChange = (e) => {\r\n    setBisectionInputs({\r\n      ...bisectionInputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleNewtonChange = (e) => {\r\n    setNewtonInputs({\r\n      ...newtonInputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const bisection = (f, df, a, b, tolerance) => {\r\n    let x = (a + b) / 2;\r\n    while (b - a > 2 * tolerance) {\r\n      if (df(x) > 0) {\r\n        a = x;\r\n      } else {\r\n        b = x;\r\n      }\r\n      x = (a + b) / 2;\r\n    }\r\n    return x;\r\n  };\r\n\r\n  const newton = (f, df, x0, tolerance) => {\r\n    let x = x0;\r\n    let iterations = 0;\r\n    const maxIterations = 100;\r\n\r\n    while (iterations < maxIterations) {\r\n      const firstDerivative = df(x);\r\n      const secondDerivative = math.derivative(math.derivative(f, 'x'), 'x').evaluate({ x });\r\n\r\n      if (Math.abs(secondDerivative) < 1e-10) {\r\n        throw new Error('La segunda derivada está cerca de cero. El método puede no converger.');\r\n      }\r\n\r\n      const dx = firstDerivative / secondDerivative;\r\n      const xNew = x - dx;\r\n\r\n      if (Math.abs(xNew - x) < tolerance) {\r\n        return xNew;\r\n      }\r\n\r\n      x = xNew;\r\n      iterations++;\r\n    }\r\n\r\n    throw new Error('El método no convergió después del máximo de iteraciones.');\r\n  };\r\n\r\n  const handleBisectionSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { func, a, b, tolerance } = bisectionInputs;\r\n\r\n    try {\r\n      const f = (x) => math.evaluate(func, { x });\r\n      const df = (x) => math.derivative(func, 'x').evaluate({ x });\r\n      const x = bisection(f, df, parseFloat(a), parseFloat(b), parseFloat(tolerance));\r\n      setResult(`Método de Bisección: x* ≈ ${x.toFixed(6)}, f(x*) ≈ ${f(x).toFixed(6)}`);\r\n    } catch (error) {\r\n      setResult(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNewtonSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { func, x0, tolerance } = newtonInputs;\r\n\r\n    try {\r\n      const f = (x) => math.evaluate(func, { x });\r\n      const df = (x) => math.derivative(func, 'x').evaluate({ x });\r\n      const x = newton(f, df, parseFloat(x0), parseFloat(tolerance));\r\n      setResult(`Método de Newton: x* ≈ ${x.toFixed(6)}, f(x*) ≈ ${f(x).toFixed(6)}`);\r\n    } catch (error) {\r\n      setResult(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Optimización sin Restricciones</h1>\r\n      <button onClick={() => setMethod('bisection')}>Método de Bisección</button>\r\n      <button onClick={() => setMethod('newton')}>Método de Newton</button>\r\n\r\n      {method === 'bisection' && (\r\n        <form onSubmit={handleBisectionSubmit}>\r\n          <h2>Método de Bisección</h2>\r\n          <label>Función a optimizar:</label>\r\n          <input type=\"text\" name=\"func\" value={bisectionInputs.func} onChange={handleBisectionChange} required />\r\n          <label>Límite inferior (a):</label>\r\n          <input type=\"number\" name=\"a\" value={bisectionInputs.a} onChange={handleBisectionChange} required />\r\n          <label>Límite superior (b):</label>\r\n          <input type=\"number\" name=\"b\" value={bisectionInputs.b} onChange={handleBisectionChange} required />\r\n          <label>Tolerancia:</label>\r\n          <input type=\"number\" name=\"tolerance\" value={bisectionInputs.tolerance} onChange={handleBisectionChange} required />\r\n          <button type=\"submit\">Calcular</button>\r\n        </form>\r\n      )}\r\n\r\n      {method === 'newton' && (\r\n        <form onSubmit={handleNewtonSubmit}>\r\n          <h2>Método de Newton</h2>\r\n          <label>Función a optimizar:</label>\r\n          <input type=\"text\" name=\"func\" value={newtonInputs.func} onChange={handleNewtonChange} required />\r\n          <label>Punto inicial (x0):</label>\r\n          <input type=\"number\" name=\"x0\" value={newtonInputs.x0} onChange={handleNewtonChange} required />\r\n          <label>Tolerancia:</label>\r\n          <input type=\"number\" name=\"tolerance\" value={newtonInputs.tolerance} onChange={handleNewtonChange} required />\r\n          <button type=\"submit\">Calcular</button>\r\n        </form>\r\n      )}\r\n\r\n      {result && <div id=\"result\">{result}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizacionSinRestricciones;\r\n","import React, { useState } from 'react';\nimport CpmCalculator from './CPMcalculator';\nimport PertCalculator from './PERTCalculator';\nimport Optimizacion from './optimizacion';\nimport EOQCalculator from './EOQcalculator';\nimport EPQCalculator from './EPQCalculator';\nimport MIFPCalculator from './MIFPCalculator';\nimport QuantityDiscountCalculator from './QuantityDiscountCalculator';\nimport ArbolesDecision from './ArbolesDecision';\nimport Incertidumbre from './Incertidumbre';\n\n// Importar componentes de Unidad II\nimport ColasPoissonExponencial from './ColasPoissonExponencial';\nimport VariosServidorPoissonExponencial from './VariosServidoresPoissonExponencial';\nimport NacimientoMuerte from './NacimientoMuerte';\nimport ColasPoissonArbitrario from './ColasPoissonArbitrario';\nimport MultiplesServidoresSinEspera from './MultiplesServidoresSinEspera';\nimport FuentesFinitas from './FuentesFinitas';\nimport QPCalculator from './QPCalculator';\nimport ProgramacionSeparable from './ProgramacionSeparable';\nimport ProgramacionNoConvexa from './ProgramacionNoConvexa';\nimport ProgramacionConvexa from './ProgramacionConvexa';\nimport ProgramacionFraccionaria from './ProgramacionFraccionaria';\nimport ProgramacionGeometrica from './ProgramacionGeometrica';\nimport HolguraPorRechazos from './HolguraPorRechazos';\nimport OptimizacionSinRestricciones from './OptimizacionSinRestricciones';\n\nfunction App() {\n  const [selectedUnit, setSelectedUnit] = useState(null);\n  const [selectedMethod, setSelectedMethod] = useState(null);\n\n  // Manejar selección de unidad\n  const handleSelectUnit = (unit) => {\n    setSelectedUnit(unit);\n    setSelectedMethod(null); // Resetear el método cuando se cambia la unidad\n  };\n\n  // Manejar selección de método\n  const handleSelectMethod = (method) => {\n    setSelectedMethod(method);\n  };\n\n  // Función para regresar al menú anterior\n  const goBack = () => {\n    if (selectedMethod) {\n      setSelectedMethod(null); // Volver al menú de métodos\n    } else if (selectedUnit) {\n      setSelectedUnit(null); // Volver al menú principal\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: 'center', padding: '50px', fontFamily: 'Arial, sans-serif' }}>\n      {/* Menú principal */}\n      {!selectedUnit && (\n        <div>\n          <h1>Seleccione una Unidad</h1>\n          <button onClick={() => handleSelectUnit('UNIDAD I')}>UNIDAD I</button>\n          <button onClick={() => handleSelectUnit('UNIDAD II')}>UNIDAD II</button>\n        </div>\n      )}\n\n      {/* Menú de Unidad I */}\n      {selectedUnit === 'UNIDAD I' && !selectedMethod && (\n        <div>\n          <h2>Modelos en UNIDAD I</h2>\n          <button onClick={() => handleSelectMethod('CPM')}>Método CPM</button>\n          <button onClick={() => handleSelectMethod('PERT')}>Método PERT</button>\n          <button onClick={() => handleSelectMethod('OPTIMIZACION')}>Optimización</button>\n          <button onClick={() => handleSelectMethod('INVENTARIO')}>Modelos de Inventario</button>\n          <button onClick={() => handleSelectMethod('TD')}>Teoría de Decisiones</button>\n          <button onClick={goBack}>Volver al menú principal</button>\n        </div>\n      )}\n\n      {/* Métodos de UNIDAD I */}\n      {selectedMethod === 'CPM' && (\n        <div>\n          <CpmCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PERT' && (\n        <div>\n          <PertCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'OPTIMIZACION' && (\n        <div>\n          <Optimizacion />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'INVENTARIO' && (\n        <div>\n          <h2>Modelos de Inventario</h2>\n          <button onClick={() => handleSelectMethod('EOQ')}>EOQ</button>\n          <button onClick={() => handleSelectMethod('EPQ')}>EPQ</button>\n          <button onClick={() => handleSelectMethod('MIFP')}>MIFP</button>\n          <button onClick={() => handleSelectMethod('DCM')}>Descuentos por Cantidad</button>\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'EOQ' && (\n        <div>\n          <EOQCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'EPQ' && (\n        <div>\n          <EPQCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'MIFP' && (\n        <div>\n          <MIFPCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'DCM' && (\n        <div>\n          <QuantityDiscountCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'TD' && (\n        <div>\n          <h2>Teoría de Decisiones</h2>\n          <button onClick={() => handleSelectMethod('AD')}>Árboles de Decisión</button>\n          <button onClick={() => handleSelectMethod('TUI')}>Incertidumbre</button>\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'AD' && (\n        <div>\n          <ArbolesDecision />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'TUI' && (\n        <div>\n          <Incertidumbre />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n\n      {/* Menú de Unidad II */}\n      {selectedUnit === 'UNIDAD II' && !selectedMethod && (\n        <div>\n          <h2>Modelos en UNIDAD II</h2>\n          <button onClick={() => handleSelectMethod('TeoriaColas')}>Teoría de Colas</button>\n          <button onClick={() => handleSelectMethod('ProgNoLineal')}>Programación No Lineal</button>\n          <button onClick={() => handleSelectMethod('ProgDinamica')}>Programación Dinámica</button>\n          <button onClick={goBack}>Volver al menú principal</button>\n        </div>\n      )}\n\n      {/* Métodos de UNIDAD II */}\n      {selectedMethod === 'TeoriaColas' && (\n        <div>\n          <h2>Teoría de Colas</h2>\n          <button onClick={() => handleSelectMethod('Cola1Servidor')}>Un servidor / Poisson / Exponenciales</button>\n          <button onClick={() => handleSelectMethod('ColaVariosServidores')}>Varios servidores / Poisson / Exponenciales</button>\n          <button onClick={() => handleSelectMethod('NacimientoMuerte')}>Nacimiento y Muerte</button>\n          <button onClick={() => handleSelectMethod('ColaArbitraria')}>Colas Poisson Arbitrarias</button>\n          <button onClick={() => handleSelectMethod('MultiplesServidores')}>Múltiples Servidores sin Espera</button>\n          <button onClick={() => handleSelectMethod('FuentesFinitas')}>Fuentes Finitas</button>\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'Cola1Servidor' && (\n        <div>\n          <ColasPoissonExponencial />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'ColaVariosServidores' && (\n        <div>\n          <VariosServidorPoissonExponencial />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'NacimientoMuerte' && (\n        <div>\n          <NacimientoMuerte />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'ColaArbitraria' && (\n        <div>\n          <ColasPoissonArbitrario />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'MultiplesServidores' && (\n        <div>\n          <MultiplesServidoresSinEspera />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'FuentesFinitas' && (\n        <div>\n          <FuentesFinitas />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n\n      {/* Programación No Lineal */}\n      {selectedMethod === 'ProgNoLineal' && (\n        <div>\n          <h2>Programación No Lineal</h2>\n          <button onClick={() => handleSelectMethod('QPC')}>Programación Cuadrática</button>\n          <button onClick={() => handleSelectMethod('PC')}>Programación Convexa</button>\n          <button onClick={() => handleSelectMethod('PF')}>Programación Fraccionaria</button>\n          <button onClick={() => handleSelectMethod('PG')}>Programación Geométrica</button>\n          <button onClick={() => handleSelectMethod('PS')}>Programación Separable</button>\n          <button onClick={() => handleSelectMethod('PNC')}>Programación No Convexa</button>\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'QPC' && (\n        <div>\n          <QPCalculator />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PC' && (\n        <div>\n          <ProgramacionConvexa />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PF' && (\n        <div>\n          <ProgramacionFraccionaria />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PG' && (\n        <div>\n          <ProgramacionGeometrica />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PS' && (\n        <div>\n          <ProgramacionSeparable />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'PNC' && (\n        <div>\n          <ProgramacionNoConvexa />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n\n      {/* Programación Dinámica */}\n      {selectedMethod === 'ProgDinamica' && (\n        <div>\n          <h2>Programación Dinámica</h2>\n          <button onClick={() => handleSelectMethod('HolguraPorRechazos')}>Holgura por Rechazos</button>\n          <button onClick={() => handleSelectMethod('OptimizacionSinRestricciones')}>Optimización sin Restricciones</button>\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'HolguraPorRechazos' && (\n        <div>\n          <HolguraPorRechazos />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n      {selectedMethod === 'OptimizacionSinRestricciones' && (\n        <div>\n          <OptimizacionSinRestricciones />\n          <button onClick={goBack}>Volver</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}